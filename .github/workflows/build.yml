name: Build Yarn Spinner

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Fetch all commits
      run: git fetch --unshallow

    - uses: gittools/actions/gitversion/setup@v0.9.10
      name: Install GitVersion
      with:
          versionSpec: '5.x'

    - uses: gittools/actions/gitversion/execute@v0.9.10
      name: Execute GitVersion
      id: gitversion # step id used as reference for output values
      with:
        updateAssemblyInfo: true
      
    - name: Print version information
      run: |
        echo "Major: ${{ steps.gitversion.outputs.major }}"
        echo "Minor: ${{ steps.gitversion.outputs.minor }}"
        echo "Patch: ${{ steps.gitversion.outputs.patch }}"
        echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"
        echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release
    - name: Test
      run: dotnet test --no-build --configuration Release --verbosity normal
    - name: Deploy to NuGet
      if: ${{ startsWith(github.ref, "refs/tags/v") }}
      run: |
        dotnet pack -c Release /p:Version=${{ steps.gitversion.outputs.nuGetVersionV2}} -o "nuget"
        dotnet push nuget/*.nupkg -k ${{ secrets.NUGET_KEY }} -s https://api.nuget.org/v3/index.json

    
    # If we are on the develop or main branch, do a nuget pack and push if this was a tagged version
    # /p:PackageVersion=${{ steps.gitversion.outputs.semVer }}
    # 

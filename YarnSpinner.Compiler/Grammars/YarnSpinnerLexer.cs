//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /Users/desplesda/Work/YarnSpinner/YarnSpinner.Compiler/Grammars/YarnSpinnerLexer.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Yarn.Compiler {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class YarnSpinnerLexer : IndentAwareLexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		INDENT=1, DEDENT=2, BLANK_LINE_FOLLOWING_OPTION=3, WS=4, COMMENT=5, NEWLINE=6, 
		ID=7, BODY_START=8, HEADER_DELIMITER=9, HASHTAG=10, REST_OF_LINE=11, BODY_WS=12, 
		BODY_END=13, SHORTCUT_ARROW=14, LINE_GROUP_ARROW=15, COMMAND_START=16, 
		EXPRESSION_START=17, ESCAPED_ANY=18, TEXT_ESCAPE=19, TEXT_COMMENT=20, 
		TEXT=21, UNESCAPABLE_CHARACTER=22, TEXT_COMMANDHASHTAG_WS=23, TEXT_COMMANDHASHTAG_COMMENT=24, 
		TEXT_COMMANDHASHTAG_ERROR=25, HASHTAG_WS=26, HASHTAG_TEXT=27, EXPR_WS=28, 
		EXPRESSION_WHEN_ALWAYS=29, KEYWORD_TRUE=30, KEYWORD_FALSE=31, KEYWORD_NULL=32, 
		OPERATOR_ASSIGNMENT=33, OPERATOR_LOGICAL_LESS_THAN_EQUALS=34, OPERATOR_LOGICAL_GREATER_THAN_EQUALS=35, 
		OPERATOR_LOGICAL_EQUALS=36, OPERATOR_LOGICAL_LESS=37, OPERATOR_LOGICAL_GREATER=38, 
		OPERATOR_LOGICAL_NOT_EQUALS=39, OPERATOR_LOGICAL_AND=40, OPERATOR_LOGICAL_OR=41, 
		OPERATOR_LOGICAL_XOR=42, OPERATOR_LOGICAL_NOT=43, OPERATOR_MATHS_ADDITION_EQUALS=44, 
		OPERATOR_MATHS_SUBTRACTION_EQUALS=45, OPERATOR_MATHS_MULTIPLICATION_EQUALS=46, 
		OPERATOR_MATHS_MODULUS_EQUALS=47, OPERATOR_MATHS_DIVISION_EQUALS=48, OPERATOR_MATHS_ADDITION=49, 
		OPERATOR_MATHS_SUBTRACTION=50, OPERATOR_MATHS_MULTIPLICATION=51, OPERATOR_MATHS_DIVISION=52, 
		OPERATOR_MATHS_MODULUS=53, LPAREN=54, RPAREN=55, COMMA=56, EXPRESSION_AS=57, 
		STRING=58, FUNC_ID=59, EXPRESSION_END=60, VAR_ID=61, DOT=62, NUMBER=63, 
		COMMAND_NEWLINE=64, COMMAND_WS=65, COMMAND_IF=66, COMMAND_ELSEIF=67, COMMAND_ELSE=68, 
		COMMAND_SET=69, COMMAND_ENDIF=70, COMMAND_CALL=71, COMMAND_DECLARE=72, 
		COMMAND_JUMP=73, COMMAND_DETOUR=74, COMMAND_RETURN=75, COMMAND_ENUM=76, 
		COMMAND_CASE=77, COMMAND_ENDENUM=78, COMMAND_ONCE=79, COMMAND_ENDONCE=80, 
		COMMAND_LOCAL=81, COMMAND_END=82, COMMAND_TEXT_NEWLINE=83, COMMAND_TEXT_END=84, 
		COMMAND_EXPRESSION_START=85, COMMAND_TEXT=86, COMMAND_ID_NEWLINE=87, TYPE_STRING=88, 
		TYPE_NUMBER=89, TYPE_BOOL=90;
	public const int
		WHITESPACE=2, COMMENTS=3;
	public const int
		HeaderMode=1, BodyMode=2, TextMode=3, TextEscapedMode=4, TextCommandOrHashtagMode=5, 
		HashtagMode=6, ExpressionMode=7, CommandMode=8, CommandTextMode=9, CommandIDMode=10, 
		CommandIDOrExpressionMode=11;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "WHITESPACE", "COMMENTS"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE", "HeaderMode", "BodyMode", "TextMode", "TextEscapedMode", 
		"TextCommandOrHashtagMode", "HashtagMode", "ExpressionMode", "CommandMode", 
		"CommandTextMode", "CommandIDMode", "CommandIDOrExpressionMode"
	};

	public static readonly string[] ruleNames = {
		"WS", "COMMENT", "NEWLINE", "ID", "IDENTIFIER_HEAD", "IDENTIFIER_CHARACTER", 
		"IDENTIFIER_CHARACTERS", "BODY_START", "HEADER_DELIMITER", "HASHTAG", 
		"REST_OF_LINE", "HEADER_NEWLINE", "BODY_WS", "BODY_NEWLINE", "BODY_COMMENT", 
		"BODY_END", "SHORTCUT_ARROW", "LINE_GROUP_ARROW", "COMMAND_START", "BODY_HASHTAG", 
		"EXPRESSION_START", "ESCAPED_BRACKET_START", "ESCAPED_ANY", "ANY", "TEXT_NEWLINE", 
		"TEXT_ESCAPED_MARKUP_BRACKET", "TEXT_ESCAPE", "TEXT_HASHTAG", "TEXT_EXPRESSION_START", 
		"TEXT_COMMAND_START", "TEXT_COMMENT", "TEXT", "TEXT_FRAG", "TEXT_ESCAPED_CHARACTER", 
		"UNESCAPABLE_CHARACTER", "TEXT_COMMANDHASHTAG_WS", "TEXT_COMMANDHASHTAG_COMMENT", 
		"TEXT_COMMANDHASHTAG_COMMAND_START", "TEXT_COMMANDHASHTAG_HASHTAG", "TEXT_COMMANDHASHTAG_NEWLINE", 
		"TEXT_COMMANDHASHTAG_ERROR", "HASHTAG_WS", "HASHTAG_TAG", "HASHTAG_TEXT", 
		"EXPR_WS", "EXPRESSION_WHEN_ALWAYS", "EXPRESSION_WHEN_ONCE", "EXPRESSION_WHEN_IF", 
		"KEYWORD_TRUE", "KEYWORD_FALSE", "KEYWORD_NULL", "OPERATOR_ASSIGNMENT", 
		"OPERATOR_LOGICAL_LESS_THAN_EQUALS", "OPERATOR_LOGICAL_GREATER_THAN_EQUALS", 
		"OPERATOR_LOGICAL_EQUALS", "OPERATOR_LOGICAL_LESS", "OPERATOR_LOGICAL_GREATER", 
		"OPERATOR_LOGICAL_NOT_EQUALS", "OPERATOR_LOGICAL_AND", "OPERATOR_LOGICAL_OR", 
		"OPERATOR_LOGICAL_XOR", "OPERATOR_LOGICAL_NOT", "OPERATOR_MATHS_ADDITION_EQUALS", 
		"OPERATOR_MATHS_SUBTRACTION_EQUALS", "OPERATOR_MATHS_MULTIPLICATION_EQUALS", 
		"OPERATOR_MATHS_MODULUS_EQUALS", "OPERATOR_MATHS_DIVISION_EQUALS", "OPERATOR_MATHS_ADDITION", 
		"OPERATOR_MATHS_SUBTRACTION", "OPERATOR_MATHS_MULTIPLICATION", "OPERATOR_MATHS_DIVISION", 
		"OPERATOR_MATHS_MODULUS", "LPAREN", "RPAREN", "COMMA", "EXPRESSION_AS", 
		"TYPE_STRING", "TYPE_NUMBER", "TYPE_BOOL", "STRING", "FUNC_ID", "EXPRESSION_END", 
		"EXPRESSION_COMMAND_END", "VAR_ID", "DOT", "NUMBER", "EXPRESSION_NEWLINE", 
		"INT", "DIGIT", "COMMAND_NEWLINE", "COMMAND_WS", "COMMAND_IF", "COMMAND_ELSEIF", 
		"COMMAND_ELSE", "COMMAND_SET", "COMMAND_ENDIF", "COMMAND_CALL", "COMMAND_DECLARE", 
		"COMMAND_JUMP", "COMMAND_DETOUR", "COMMAND_RETURN", "COMMAND_ENUM", "COMMAND_CASE", 
		"COMMAND_ENDENUM", "COMMAND_ONCE", "COMMAND_ENDONCE", "COMMAND_LOCAL", 
		"COMMAND_END", "COMMAND_EXPRESSION_AT_START", "COMMAND_ARBITRARY", "COMMAND_TEXT_NEWLINE", 
		"COMMAND_TEXT_END", "COMMAND_EXPRESSION_START", "COMMAND_TEXT", "COMMAND_ID_NEWLINE", 
		"COMMAND_ID", "COMMAND_ID_END", "COMMAND_ID_OR_EXPRESSION_ID", "COMMAND_ID_OR_EXPRESSION_START", 
		"COMMAND_ID_OR_EXPRESSION_END"
	};


	public YarnSpinnerLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public YarnSpinnerLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, null, null, "'---'", null, "'#'", 
		null, null, "'==='", "'->'", "'=>'", "'<<'", null, null, "'\\'", null, 
		null, null, null, null, null, null, null, null, "'always'", "'true'", 
		"'false'", "'null'", null, null, null, null, null, null, null, null, null, 
		null, null, "'+='", "'-='", "'*='", "'%='", "'/='", "'+'", "'-'", "'*'", 
		"'/'", "'%'", "'('", "')'", "','", "'as'", null, null, "'}'", null, "'.'", 
		null, null, null, null, null, null, null, "'endif'", null, null, null, 
		null, null, null, null, null, "'once'", "'endonce'", null, null, null, 
		null, "'{'", null, null, "'string'", "'number'", "'bool'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "INDENT", "DEDENT", "BLANK_LINE_FOLLOWING_OPTION", "WS", "COMMENT", 
		"NEWLINE", "ID", "BODY_START", "HEADER_DELIMITER", "HASHTAG", "REST_OF_LINE", 
		"BODY_WS", "BODY_END", "SHORTCUT_ARROW", "LINE_GROUP_ARROW", "COMMAND_START", 
		"EXPRESSION_START", "ESCAPED_ANY", "TEXT_ESCAPE", "TEXT_COMMENT", "TEXT", 
		"UNESCAPABLE_CHARACTER", "TEXT_COMMANDHASHTAG_WS", "TEXT_COMMANDHASHTAG_COMMENT", 
		"TEXT_COMMANDHASHTAG_ERROR", "HASHTAG_WS", "HASHTAG_TEXT", "EXPR_WS", 
		"EXPRESSION_WHEN_ALWAYS", "KEYWORD_TRUE", "KEYWORD_FALSE", "KEYWORD_NULL", 
		"OPERATOR_ASSIGNMENT", "OPERATOR_LOGICAL_LESS_THAN_EQUALS", "OPERATOR_LOGICAL_GREATER_THAN_EQUALS", 
		"OPERATOR_LOGICAL_EQUALS", "OPERATOR_LOGICAL_LESS", "OPERATOR_LOGICAL_GREATER", 
		"OPERATOR_LOGICAL_NOT_EQUALS", "OPERATOR_LOGICAL_AND", "OPERATOR_LOGICAL_OR", 
		"OPERATOR_LOGICAL_XOR", "OPERATOR_LOGICAL_NOT", "OPERATOR_MATHS_ADDITION_EQUALS", 
		"OPERATOR_MATHS_SUBTRACTION_EQUALS", "OPERATOR_MATHS_MULTIPLICATION_EQUALS", 
		"OPERATOR_MATHS_MODULUS_EQUALS", "OPERATOR_MATHS_DIVISION_EQUALS", "OPERATOR_MATHS_ADDITION", 
		"OPERATOR_MATHS_SUBTRACTION", "OPERATOR_MATHS_MULTIPLICATION", "OPERATOR_MATHS_DIVISION", 
		"OPERATOR_MATHS_MODULUS", "LPAREN", "RPAREN", "COMMA", "EXPRESSION_AS", 
		"STRING", "FUNC_ID", "EXPRESSION_END", "VAR_ID", "DOT", "NUMBER", "COMMAND_NEWLINE", 
		"COMMAND_WS", "COMMAND_IF", "COMMAND_ELSEIF", "COMMAND_ELSE", "COMMAND_SET", 
		"COMMAND_ENDIF", "COMMAND_CALL", "COMMAND_DECLARE", "COMMAND_JUMP", "COMMAND_DETOUR", 
		"COMMAND_RETURN", "COMMAND_ENUM", "COMMAND_CASE", "COMMAND_ENDENUM", "COMMAND_ONCE", 
		"COMMAND_ENDONCE", "COMMAND_LOCAL", "COMMAND_END", "COMMAND_TEXT_NEWLINE", 
		"COMMAND_TEXT_END", "COMMAND_EXPRESSION_START", "COMMAND_TEXT", "COMMAND_ID_NEWLINE", 
		"TYPE_STRING", "TYPE_NUMBER", "TYPE_BOOL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "YarnSpinnerLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static YarnSpinnerLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	public override void Action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 8 : HEADER_DELIMITER_action(_localctx, actionIndex); break;
		case 86 : EXPRESSION_NEWLINE_action(_localctx, actionIndex); break;
		}
	}
	private void HEADER_DELIMITER_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0:  if(LastTokenWas(ID, "when")) { SetInWhenClause(true); PushMode(ExpressionMode); } else { PushMode(HeaderMode); }  break;
		}
	}
	private void EXPRESSION_NEWLINE_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: SetInWhenClause(false); break;
		}
	}
	public override bool Sempred(RuleContext _localctx, int ruleIndex, int predIndex) {
		switch (ruleIndex) {
		case 45 : return EXPRESSION_WHEN_ALWAYS_sempred(_localctx, predIndex);
		case 46 : return EXPRESSION_WHEN_ONCE_sempred(_localctx, predIndex);
		case 47 : return EXPRESSION_WHEN_IF_sempred(_localctx, predIndex);
		case 86 : return EXPRESSION_NEWLINE_sempred(_localctx, predIndex);
		}
		return true;
	}
	private bool EXPRESSION_WHEN_ALWAYS_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 0: return IsInWhenClause();;
		}
		return true;
	}
	private bool EXPRESSION_WHEN_ONCE_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 1: return IsInWhenClause();;
		}
		return true;
	}
	private bool EXPRESSION_WHEN_IF_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 2: return IsInWhenClause();;
		}
		return true;
	}
	private bool EXPRESSION_NEWLINE_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 3: return IsInWhenClause();;
		}
		return true;
	}

	private static int[] _serializedATN = {
		4,0,90,925,6,-1,6,-1,6,-1,6,-1,6,-1,6,-1,6,-1,6,-1,6,-1,6,-1,6,-1,6,-1,
		2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,
		8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,
		2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,
		2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,
		2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,
		2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,
		2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,
		2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,
		2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,
		2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,71,
		2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,2,78,7,78,
		2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,84,2,85,7,85,
		2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,7,91,2,92,7,92,
		2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,98,7,98,2,99,7,99,
		2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,7,104,2,105,7,105,
		2,106,7,106,2,107,7,107,2,108,7,108,2,109,7,109,2,110,7,110,2,111,7,111,
		2,112,7,112,2,113,7,113,2,114,7,114,2,115,7,115,2,116,7,116,2,117,7,117,
		2,118,7,118,2,119,7,119,1,0,4,0,254,8,0,11,0,12,0,255,1,0,1,0,1,1,1,1,
		1,1,1,1,5,1,264,8,1,10,1,12,1,267,9,1,1,1,1,1,1,2,3,2,272,8,2,1,2,1,2,
		3,2,276,8,2,1,2,5,2,279,8,2,10,2,12,2,282,9,2,1,2,1,2,1,3,1,3,3,3,288,
		8,3,1,4,3,4,291,8,4,1,5,1,5,3,5,295,8,5,1,6,4,6,298,8,6,11,6,12,6,299,
		1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,5,8,310,8,8,10,8,12,8,313,9,8,1,8,1,8,
		1,9,1,9,1,9,1,9,1,10,4,10,322,8,10,11,10,12,10,323,1,11,1,11,1,11,1,11,
		1,11,1,11,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,
		1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,17,1,17,1,17,
		1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,
		1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,
		1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,
		3,25,400,8,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,
		27,1,27,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,
		30,1,30,1,30,1,30,1,31,4,31,432,8,31,11,31,12,31,433,1,31,3,31,437,8,31,
		1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,35,1,35,1,35,
		1,35,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,
		1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,41,1,41,1,41,1,41,1,42,
		1,42,1,42,1,42,1,43,4,43,485,8,43,11,43,12,43,486,1,43,1,43,1,44,1,44,
		1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,
		1,46,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,48,
		1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,
		1,50,1,51,1,51,1,51,3,51,539,8,51,1,52,1,52,1,52,1,52,1,52,3,52,546,8,
		52,1,53,1,53,1,53,1,53,1,53,3,53,553,8,53,1,54,1,54,1,54,1,54,1,54,1,54,
		3,54,561,8,54,1,55,1,55,1,55,3,55,566,8,55,1,56,1,56,1,56,3,56,571,8,56,
		1,57,1,57,1,57,1,57,1,57,3,57,578,8,57,1,58,1,58,1,58,1,58,1,58,3,58,585,
		8,58,1,59,1,59,1,59,1,59,3,59,591,8,59,1,60,1,60,1,60,1,60,3,60,597,8,
		60,1,61,1,61,1,61,1,61,3,61,603,8,61,1,62,1,62,1,62,1,63,1,63,1,63,1,64,
		1,64,1,64,1,65,1,65,1,65,1,66,1,66,1,66,1,67,1,67,1,68,1,68,1,69,1,69,
		1,70,1,70,1,71,1,71,1,72,1,72,1,73,1,73,1,74,1,74,1,75,1,75,1,75,1,76,
		1,76,1,76,1,76,1,76,1,76,1,76,1,76,1,76,1,77,1,77,1,77,1,77,1,77,1,77,
		1,77,1,77,1,77,1,78,1,78,1,78,1,78,1,78,1,78,1,78,1,79,1,79,1,79,1,79,
		5,79,668,8,79,10,79,12,79,671,9,79,1,79,1,79,1,80,1,80,1,81,1,81,1,81,
		1,81,1,82,1,82,1,82,1,82,1,82,1,82,1,82,1,83,1,83,1,83,1,84,1,84,1,85,
		1,85,1,85,1,85,1,85,3,85,698,8,85,1,86,4,86,701,8,86,11,86,12,86,702,1,
		86,1,86,1,86,1,86,1,86,1,86,1,87,4,87,712,8,87,11,87,12,87,713,1,88,1,
		88,1,89,1,89,1,90,1,90,1,90,1,90,1,91,1,91,1,91,1,91,1,91,1,91,1,91,1,
		92,1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,93,1,93,1,93,1,
		93,1,93,1,93,3,93,748,8,93,1,94,1,94,1,94,1,94,1,94,1,94,1,94,1,94,1,95,
		1,95,1,95,1,95,1,95,1,95,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,96,
		1,97,1,97,1,97,1,97,1,97,1,97,1,97,1,97,1,97,1,97,1,97,1,97,1,98,1,98,
		1,98,1,98,1,98,1,98,1,98,1,98,1,98,1,99,1,99,1,99,1,99,1,99,1,99,1,99,
		1,99,1,99,1,99,1,99,1,100,1,100,1,100,1,100,1,100,1,100,1,100,1,100,3,
		100,813,8,100,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,
		102,1,102,1,102,1,102,1,102,1,102,1,102,1,102,1,102,1,103,1,103,1,103,
		1,103,1,103,1,103,1,103,1,103,1,103,3,103,842,8,103,1,104,1,104,1,104,
		1,104,1,104,1,105,1,105,1,105,1,105,1,105,1,105,1,105,1,105,1,106,1,106,
		1,106,1,106,1,106,1,106,1,106,1,106,1,107,1,107,1,107,1,107,1,107,1,108,
		1,108,1,108,1,108,1,108,1,108,1,109,1,109,1,109,1,109,1,109,1,110,1,110,
		1,111,1,111,1,111,1,111,1,111,1,112,1,112,1,112,1,112,1,113,4,113,893,
		8,113,11,113,12,113,894,1,114,1,114,1,115,1,115,1,115,1,115,1,115,1,116,
		1,116,1,116,1,116,1,116,1,116,1,117,1,117,1,117,1,117,1,117,1,118,1,118,
		1,118,1,118,1,118,1,119,1,119,1,119,1,119,1,119,1,119,0,0,120,12,4,14,
		5,16,6,18,7,20,0,22,0,24,0,26,8,28,9,30,10,32,11,34,0,36,12,38,0,40,0,
		42,13,44,14,46,15,48,16,50,0,52,17,54,0,56,18,58,0,60,0,62,0,64,19,66,
		0,68,0,70,0,72,20,74,21,76,0,78,0,80,22,82,23,84,24,86,0,88,0,90,0,92,
		25,94,26,96,0,98,27,100,28,102,29,104,0,106,0,108,30,110,31,112,32,114,
		33,116,34,118,35,120,36,122,37,124,38,126,39,128,40,130,41,132,42,134,
		43,136,44,138,45,140,46,142,47,144,48,146,49,148,50,150,51,152,52,154,
		53,156,54,158,55,160,56,162,57,164,88,166,89,168,90,170,58,172,59,174,
		60,176,0,178,61,180,62,182,63,184,0,186,0,188,0,190,64,192,65,194,66,196,
		67,198,68,200,69,202,70,204,71,206,72,208,73,210,74,212,75,214,76,216,
		77,218,78,220,79,222,80,224,81,226,82,228,0,230,0,232,83,234,84,236,85,
		238,86,240,87,242,0,244,0,246,0,248,0,250,0,12,0,1,2,3,4,5,6,7,8,9,10,
		11,14,2,0,9,9,32,32,2,0,10,10,13,13,49,0,65,90,95,95,97,122,168,168,170,
		170,173,173,175,175,178,181,183,186,188,190,192,214,216,246,248,767,880,
		5759,5761,6157,6159,7615,7680,8191,8203,8205,8234,8238,8255,8256,8276,
		8276,8288,8399,8448,8591,9312,9471,10102,10131,11264,11775,11904,12287,
		12292,12295,12321,12335,12337,55295,63744,64829,64832,64975,65008,65055,
		65072,65092,65095,65533,65536,131069,131072,196605,196608,262141,262144,
		327677,327680,393213,393216,458749,458752,524285,524288,589821,589824,
		655357,655360,720893,720896,786429,786432,851965,851968,917501,917504,
		983037,5,0,48,57,768,879,7616,7679,8400,8447,65056,65071,1,0,32,32,2,0,
		47,47,60,60,7,0,10,10,13,13,35,35,47,47,60,60,92,92,123,123,7,0,35,35,
		47,47,60,60,62,62,92,92,123,123,125,125,5,0,9,10,13,13,32,32,35,36,60,
		60,4,0,10,10,13,13,34,34,92,92,2,0,34,34,92,92,1,0,48,57,10,0,9,13,32,
		32,133,133,160,160,5760,5760,8192,8202,8232,8233,8239,8239,8287,8287,12288,
		12288,4,0,10,10,13,13,62,62,123,123,942,0,12,1,0,0,0,0,14,1,0,0,0,0,16,
		1,0,0,0,0,18,1,0,0,0,0,26,1,0,0,0,0,28,1,0,0,0,0,30,1,0,0,0,1,32,1,0,0,
		0,1,34,1,0,0,0,2,36,1,0,0,0,2,38,1,0,0,0,2,40,1,0,0,0,2,42,1,0,0,0,2,44,
		1,0,0,0,2,46,1,0,0,0,2,48,1,0,0,0,2,50,1,0,0,0,2,52,1,0,0,0,2,54,1,0,0,
		0,2,56,1,0,0,0,2,58,1,0,0,0,3,60,1,0,0,0,3,62,1,0,0,0,3,64,1,0,0,0,3,66,
		1,0,0,0,3,68,1,0,0,0,3,70,1,0,0,0,3,72,1,0,0,0,3,74,1,0,0,0,4,78,1,0,0,
		0,4,80,1,0,0,0,5,82,1,0,0,0,5,84,1,0,0,0,5,86,1,0,0,0,5,88,1,0,0,0,5,90,
		1,0,0,0,5,92,1,0,0,0,6,94,1,0,0,0,6,96,1,0,0,0,6,98,1,0,0,0,7,100,1,0,
		0,0,7,102,1,0,0,0,7,104,1,0,0,0,7,106,1,0,0,0,7,108,1,0,0,0,7,110,1,0,
		0,0,7,112,1,0,0,0,7,114,1,0,0,0,7,116,1,0,0,0,7,118,1,0,0,0,7,120,1,0,
		0,0,7,122,1,0,0,0,7,124,1,0,0,0,7,126,1,0,0,0,7,128,1,0,0,0,7,130,1,0,
		0,0,7,132,1,0,0,0,7,134,1,0,0,0,7,136,1,0,0,0,7,138,1,0,0,0,7,140,1,0,
		0,0,7,142,1,0,0,0,7,144,1,0,0,0,7,146,1,0,0,0,7,148,1,0,0,0,7,150,1,0,
		0,0,7,152,1,0,0,0,7,154,1,0,0,0,7,156,1,0,0,0,7,158,1,0,0,0,7,160,1,0,
		0,0,7,162,1,0,0,0,7,164,1,0,0,0,7,166,1,0,0,0,7,168,1,0,0,0,7,170,1,0,
		0,0,7,172,1,0,0,0,7,174,1,0,0,0,7,176,1,0,0,0,7,178,1,0,0,0,7,180,1,0,
		0,0,7,182,1,0,0,0,7,184,1,0,0,0,8,190,1,0,0,0,8,192,1,0,0,0,8,194,1,0,
		0,0,8,196,1,0,0,0,8,198,1,0,0,0,8,200,1,0,0,0,8,202,1,0,0,0,8,204,1,0,
		0,0,8,206,1,0,0,0,8,208,1,0,0,0,8,210,1,0,0,0,8,212,1,0,0,0,8,214,1,0,
		0,0,8,216,1,0,0,0,8,218,1,0,0,0,8,220,1,0,0,0,8,222,1,0,0,0,8,224,1,0,
		0,0,8,226,1,0,0,0,8,228,1,0,0,0,8,230,1,0,0,0,9,232,1,0,0,0,9,234,1,0,
		0,0,9,236,1,0,0,0,9,238,1,0,0,0,10,240,1,0,0,0,10,242,1,0,0,0,10,244,1,
		0,0,0,11,246,1,0,0,0,11,248,1,0,0,0,11,250,1,0,0,0,12,253,1,0,0,0,14,259,
		1,0,0,0,16,275,1,0,0,0,18,285,1,0,0,0,20,290,1,0,0,0,22,294,1,0,0,0,24,
		297,1,0,0,0,26,301,1,0,0,0,28,307,1,0,0,0,30,316,1,0,0,0,32,321,1,0,0,
		0,34,325,1,0,0,0,36,331,1,0,0,0,38,335,1,0,0,0,40,340,1,0,0,0,42,345,1,
		0,0,0,44,351,1,0,0,0,46,354,1,0,0,0,48,357,1,0,0,0,50,362,1,0,0,0,52,368,
		1,0,0,0,54,373,1,0,0,0,56,379,1,0,0,0,58,385,1,0,0,0,60,390,1,0,0,0,62,
		399,1,0,0,0,64,403,1,0,0,0,66,408,1,0,0,0,68,414,1,0,0,0,70,419,1,0,0,
		0,72,426,1,0,0,0,74,436,1,0,0,0,76,438,1,0,0,0,78,440,1,0,0,0,80,445,1,
		0,0,0,82,449,1,0,0,0,84,453,1,0,0,0,86,457,1,0,0,0,88,463,1,0,0,0,90,468,
		1,0,0,0,92,473,1,0,0,0,94,475,1,0,0,0,96,479,1,0,0,0,98,484,1,0,0,0,100,
		490,1,0,0,0,102,494,1,0,0,0,104,503,1,0,0,0,106,512,1,0,0,0,108,519,1,
		0,0,0,110,524,1,0,0,0,112,530,1,0,0,0,114,538,1,0,0,0,116,545,1,0,0,0,
		118,552,1,0,0,0,120,560,1,0,0,0,122,565,1,0,0,0,124,570,1,0,0,0,126,577,
		1,0,0,0,128,584,1,0,0,0,130,590,1,0,0,0,132,596,1,0,0,0,134,602,1,0,0,
		0,136,604,1,0,0,0,138,607,1,0,0,0,140,610,1,0,0,0,142,613,1,0,0,0,144,
		616,1,0,0,0,146,619,1,0,0,0,148,621,1,0,0,0,150,623,1,0,0,0,152,625,1,
		0,0,0,154,627,1,0,0,0,156,629,1,0,0,0,158,631,1,0,0,0,160,633,1,0,0,0,
		162,635,1,0,0,0,164,638,1,0,0,0,166,647,1,0,0,0,168,656,1,0,0,0,170,663,
		1,0,0,0,172,674,1,0,0,0,174,676,1,0,0,0,176,680,1,0,0,0,178,687,1,0,0,
		0,180,690,1,0,0,0,182,697,1,0,0,0,184,700,1,0,0,0,186,711,1,0,0,0,188,
		715,1,0,0,0,190,717,1,0,0,0,192,719,1,0,0,0,194,723,1,0,0,0,196,730,1,
		0,0,0,198,741,1,0,0,0,200,749,1,0,0,0,202,757,1,0,0,0,204,763,1,0,0,0,
		206,772,1,0,0,0,208,784,1,0,0,0,210,793,1,0,0,0,212,804,1,0,0,0,214,814,
		1,0,0,0,216,823,1,0,0,0,218,832,1,0,0,0,220,843,1,0,0,0,222,848,1,0,0,
		0,224,856,1,0,0,0,226,864,1,0,0,0,228,869,1,0,0,0,230,875,1,0,0,0,232,
		880,1,0,0,0,234,882,1,0,0,0,236,887,1,0,0,0,238,892,1,0,0,0,240,896,1,
		0,0,0,242,898,1,0,0,0,244,903,1,0,0,0,246,909,1,0,0,0,248,914,1,0,0,0,
		250,919,1,0,0,0,252,254,7,0,0,0,253,252,1,0,0,0,254,255,1,0,0,0,255,253,
		1,0,0,0,255,256,1,0,0,0,256,257,1,0,0,0,257,258,6,0,0,0,258,13,1,0,0,0,
		259,260,5,47,0,0,260,261,5,47,0,0,261,265,1,0,0,0,262,264,8,1,0,0,263,
		262,1,0,0,0,264,267,1,0,0,0,265,263,1,0,0,0,265,266,1,0,0,0,266,268,1,
		0,0,0,267,265,1,0,0,0,268,269,6,1,1,0,269,15,1,0,0,0,270,272,5,13,0,0,
		271,270,1,0,0,0,271,272,1,0,0,0,272,273,1,0,0,0,273,276,5,10,0,0,274,276,
		5,13,0,0,275,271,1,0,0,0,275,274,1,0,0,0,276,280,1,0,0,0,277,279,7,0,0,
		0,278,277,1,0,0,0,279,282,1,0,0,0,280,278,1,0,0,0,280,281,1,0,0,0,281,
		283,1,0,0,0,282,280,1,0,0,0,283,284,6,2,2,0,284,17,1,0,0,0,285,287,3,20,
		4,0,286,288,3,24,6,0,287,286,1,0,0,0,287,288,1,0,0,0,288,19,1,0,0,0,289,
		291,7,2,0,0,290,289,1,0,0,0,291,21,1,0,0,0,292,295,7,3,0,0,293,295,3,20,
		4,0,294,292,1,0,0,0,294,293,1,0,0,0,295,23,1,0,0,0,296,298,3,22,5,0,297,
		296,1,0,0,0,298,299,1,0,0,0,299,297,1,0,0,0,299,300,1,0,0,0,300,25,1,0,
		0,0,301,302,5,45,0,0,302,303,5,45,0,0,303,304,5,45,0,0,304,305,1,0,0,0,
		305,306,6,7,3,0,306,27,1,0,0,0,307,311,5,58,0,0,308,310,7,4,0,0,309,308,
		1,0,0,0,310,313,1,0,0,0,311,309,1,0,0,0,311,312,1,0,0,0,312,314,1,0,0,
		0,313,311,1,0,0,0,314,315,6,8,4,0,315,29,1,0,0,0,316,317,5,35,0,0,317,
		318,1,0,0,0,318,319,6,9,5,0,319,31,1,0,0,0,320,322,8,1,0,0,321,320,1,0,
		0,0,322,323,1,0,0,0,323,321,1,0,0,0,323,324,1,0,0,0,324,33,1,0,0,0,325,
		326,3,16,2,0,326,327,1,0,0,0,327,328,6,11,6,0,328,329,6,11,2,0,329,330,
		6,11,7,0,330,35,1,0,0,0,331,332,3,12,0,0,332,333,1,0,0,0,333,334,6,12,
		0,0,334,37,1,0,0,0,335,336,3,16,2,0,336,337,1,0,0,0,337,338,6,13,6,0,338,
		339,6,13,2,0,339,39,1,0,0,0,340,341,3,14,1,0,341,342,1,0,0,0,342,343,6,
		14,8,0,343,344,6,14,1,0,344,41,1,0,0,0,345,346,5,61,0,0,346,347,5,61,0,
		0,347,348,5,61,0,0,348,349,1,0,0,0,349,350,6,15,7,0,350,43,1,0,0,0,351,
		352,5,45,0,0,352,353,5,62,0,0,353,45,1,0,0,0,354,355,5,61,0,0,355,356,
		5,62,0,0,356,47,1,0,0,0,357,358,5,60,0,0,358,359,5,60,0,0,359,360,1,0,
		0,0,360,361,6,18,9,0,361,49,1,0,0,0,362,363,5,35,0,0,363,364,1,0,0,0,364,
		365,6,19,10,0,365,366,6,19,11,0,366,367,6,19,5,0,367,51,1,0,0,0,368,369,
		5,123,0,0,369,370,1,0,0,0,370,371,6,20,12,0,371,372,6,20,13,0,372,53,1,
		0,0,0,373,374,5,92,0,0,374,375,5,91,0,0,375,376,1,0,0,0,376,377,6,21,14,
		0,377,378,6,21,12,0,378,55,1,0,0,0,379,380,5,92,0,0,380,381,1,0,0,0,381,
		382,6,22,0,0,382,383,6,22,12,0,383,384,6,22,15,0,384,57,1,0,0,0,385,386,
		9,0,0,0,386,387,1,0,0,0,387,388,6,23,14,0,388,389,6,23,12,0,389,59,1,0,
		0,0,390,391,3,16,2,0,391,392,1,0,0,0,392,393,6,24,6,0,393,394,6,24,7,0,
		394,61,1,0,0,0,395,396,5,92,0,0,396,400,5,91,0,0,397,398,5,92,0,0,398,
		400,5,93,0,0,399,395,1,0,0,0,399,397,1,0,0,0,400,401,1,0,0,0,401,402,6,
		25,14,0,402,63,1,0,0,0,403,404,5,92,0,0,404,405,1,0,0,0,405,406,6,26,16,
		0,406,407,6,26,15,0,407,65,1,0,0,0,408,409,3,30,9,0,409,410,1,0,0,0,410,
		411,6,27,10,0,411,412,6,27,17,0,412,413,6,27,5,0,413,67,1,0,0,0,414,415,
		5,123,0,0,415,416,1,0,0,0,416,417,6,28,18,0,417,418,6,28,13,0,418,69,1,
		0,0,0,419,420,5,60,0,0,420,421,5,60,0,0,421,422,1,0,0,0,422,423,6,29,19,
		0,423,424,6,29,17,0,424,425,6,29,9,0,425,71,1,0,0,0,426,427,3,14,1,0,427,
		428,1,0,0,0,428,429,6,30,1,0,429,73,1,0,0,0,430,432,3,76,32,0,431,430,
		1,0,0,0,432,433,1,0,0,0,433,431,1,0,0,0,433,434,1,0,0,0,434,437,1,0,0,
		0,435,437,7,5,0,0,436,431,1,0,0,0,436,435,1,0,0,0,437,75,1,0,0,0,438,439,
		8,6,0,0,439,77,1,0,0,0,440,441,7,7,0,0,441,442,1,0,0,0,442,443,6,33,14,
		0,443,444,6,33,7,0,444,79,1,0,0,0,445,446,9,0,0,0,446,447,1,0,0,0,447,
		448,6,34,7,0,448,81,1,0,0,0,449,450,3,12,0,0,450,451,1,0,0,0,451,452,6,
		35,0,0,452,83,1,0,0,0,453,454,3,14,1,0,454,455,1,0,0,0,455,456,6,36,1,
		0,456,85,1,0,0,0,457,458,5,60,0,0,458,459,5,60,0,0,459,460,1,0,0,0,460,
		461,6,37,19,0,461,462,6,37,9,0,462,87,1,0,0,0,463,464,5,35,0,0,464,465,
		1,0,0,0,465,466,6,38,10,0,466,467,6,38,5,0,467,89,1,0,0,0,468,469,3,16,
		2,0,469,470,1,0,0,0,470,471,6,39,6,0,471,472,6,39,7,0,472,91,1,0,0,0,473,
		474,9,0,0,0,474,93,1,0,0,0,475,476,3,12,0,0,476,477,1,0,0,0,477,478,6,
		41,0,0,478,95,1,0,0,0,479,480,3,30,9,0,480,481,1,0,0,0,481,482,6,42,10,
		0,482,97,1,0,0,0,483,485,8,8,0,0,484,483,1,0,0,0,485,486,1,0,0,0,486,484,
		1,0,0,0,486,487,1,0,0,0,487,488,1,0,0,0,488,489,6,43,7,0,489,99,1,0,0,
		0,490,491,3,12,0,0,491,492,1,0,0,0,492,493,6,44,0,0,493,101,1,0,0,0,494,
		495,5,97,0,0,495,496,5,108,0,0,496,497,5,119,0,0,497,498,5,97,0,0,498,
		499,5,121,0,0,499,500,5,115,0,0,500,501,1,0,0,0,501,502,4,45,0,0,502,103,
		1,0,0,0,503,504,5,111,0,0,504,505,5,110,0,0,505,506,5,99,0,0,506,507,5,
		101,0,0,507,508,1,0,0,0,508,509,4,46,1,0,509,510,1,0,0,0,510,511,6,46,
		20,0,511,105,1,0,0,0,512,513,5,105,0,0,513,514,5,102,0,0,514,515,1,0,0,
		0,515,516,4,47,2,0,516,517,1,0,0,0,517,518,6,47,21,0,518,107,1,0,0,0,519,
		520,5,116,0,0,520,521,5,114,0,0,521,522,5,117,0,0,522,523,5,101,0,0,523,
		109,1,0,0,0,524,525,5,102,0,0,525,526,5,97,0,0,526,527,5,108,0,0,527,528,
		5,115,0,0,528,529,5,101,0,0,529,111,1,0,0,0,530,531,5,110,0,0,531,532,
		5,117,0,0,532,533,5,108,0,0,533,534,5,108,0,0,534,113,1,0,0,0,535,539,
		5,61,0,0,536,537,5,116,0,0,537,539,5,111,0,0,538,535,1,0,0,0,538,536,1,
		0,0,0,539,115,1,0,0,0,540,541,5,60,0,0,541,546,5,61,0,0,542,543,5,108,
		0,0,543,544,5,116,0,0,544,546,5,101,0,0,545,540,1,0,0,0,545,542,1,0,0,
		0,546,117,1,0,0,0,547,548,5,62,0,0,548,553,5,61,0,0,549,550,5,103,0,0,
		550,551,5,116,0,0,551,553,5,101,0,0,552,547,1,0,0,0,552,549,1,0,0,0,553,
		119,1,0,0,0,554,555,5,61,0,0,555,561,5,61,0,0,556,557,5,105,0,0,557,561,
		5,115,0,0,558,559,5,101,0,0,559,561,5,113,0,0,560,554,1,0,0,0,560,556,
		1,0,0,0,560,558,1,0,0,0,561,121,1,0,0,0,562,566,5,60,0,0,563,564,5,108,
		0,0,564,566,5,116,0,0,565,562,1,0,0,0,565,563,1,0,0,0,566,123,1,0,0,0,
		567,571,5,62,0,0,568,569,5,103,0,0,569,571,5,116,0,0,570,567,1,0,0,0,570,
		568,1,0,0,0,571,125,1,0,0,0,572,573,5,33,0,0,573,578,5,61,0,0,574,575,
		5,110,0,0,575,576,5,101,0,0,576,578,5,113,0,0,577,572,1,0,0,0,577,574,
		1,0,0,0,578,127,1,0,0,0,579,580,5,97,0,0,580,581,5,110,0,0,581,585,5,100,
		0,0,582,583,5,38,0,0,583,585,5,38,0,0,584,579,1,0,0,0,584,582,1,0,0,0,
		585,129,1,0,0,0,586,587,5,111,0,0,587,591,5,114,0,0,588,589,5,124,0,0,
		589,591,5,124,0,0,590,586,1,0,0,0,590,588,1,0,0,0,591,131,1,0,0,0,592,
		593,5,120,0,0,593,594,5,111,0,0,594,597,5,114,0,0,595,597,5,94,0,0,596,
		592,1,0,0,0,596,595,1,0,0,0,597,133,1,0,0,0,598,599,5,110,0,0,599,600,
		5,111,0,0,600,603,5,116,0,0,601,603,5,33,0,0,602,598,1,0,0,0,602,601,1,
		0,0,0,603,135,1,0,0,0,604,605,5,43,0,0,605,606,5,61,0,0,606,137,1,0,0,
		0,607,608,5,45,0,0,608,609,5,61,0,0,609,139,1,0,0,0,610,611,5,42,0,0,611,
		612,5,61,0,0,612,141,1,0,0,0,613,614,5,37,0,0,614,615,5,61,0,0,615,143,
		1,0,0,0,616,617,5,47,0,0,617,618,5,61,0,0,618,145,1,0,0,0,619,620,5,43,
		0,0,620,147,1,0,0,0,621,622,5,45,0,0,622,149,1,0,0,0,623,624,5,42,0,0,
		624,151,1,0,0,0,625,626,5,47,0,0,626,153,1,0,0,0,627,628,5,37,0,0,628,
		155,1,0,0,0,629,630,5,40,0,0,630,157,1,0,0,0,631,632,5,41,0,0,632,159,
		1,0,0,0,633,634,5,44,0,0,634,161,1,0,0,0,635,636,5,97,0,0,636,637,5,115,
		0,0,637,163,1,0,0,0,638,639,5,115,0,0,639,640,5,116,0,0,640,641,5,114,
		0,0,641,642,5,105,0,0,642,643,5,110,0,0,643,644,5,103,0,0,644,645,1,0,
		0,0,645,646,6,76,22,0,646,165,1,0,0,0,647,648,5,110,0,0,648,649,5,117,
		0,0,649,650,5,109,0,0,650,651,5,98,0,0,651,652,5,101,0,0,652,653,5,114,
		0,0,653,654,1,0,0,0,654,655,6,77,22,0,655,167,1,0,0,0,656,657,5,98,0,0,
		657,658,5,111,0,0,658,659,5,111,0,0,659,660,5,108,0,0,660,661,1,0,0,0,
		661,662,6,78,22,0,662,169,1,0,0,0,663,669,5,34,0,0,664,668,8,9,0,0,665,
		666,5,92,0,0,666,668,7,10,0,0,667,664,1,0,0,0,667,665,1,0,0,0,668,671,
		1,0,0,0,669,667,1,0,0,0,669,670,1,0,0,0,670,672,1,0,0,0,671,669,1,0,0,
		0,672,673,5,34,0,0,673,171,1,0,0,0,674,675,3,18,3,0,675,173,1,0,0,0,676,
		677,5,125,0,0,677,678,1,0,0,0,678,679,6,81,7,0,679,175,1,0,0,0,680,681,
		5,62,0,0,681,682,5,62,0,0,682,683,1,0,0,0,683,684,6,82,23,0,684,685,6,
		82,7,0,685,686,6,82,7,0,686,177,1,0,0,0,687,688,5,36,0,0,688,689,3,18,
		3,0,689,179,1,0,0,0,690,691,5,46,0,0,691,181,1,0,0,0,692,698,3,186,87,
		0,693,694,3,186,87,0,694,695,5,46,0,0,695,696,3,186,87,0,696,698,1,0,0,
		0,697,692,1,0,0,0,697,693,1,0,0,0,698,183,1,0,0,0,699,701,7,1,0,0,700,
		699,1,0,0,0,701,702,1,0,0,0,702,700,1,0,0,0,702,703,1,0,0,0,703,704,1,
		0,0,0,704,705,4,86,3,0,705,706,6,86,24,0,706,707,1,0,0,0,707,708,6,86,
		6,0,708,709,6,86,7,0,709,185,1,0,0,0,710,712,3,188,88,0,711,710,1,0,0,
		0,712,713,1,0,0,0,713,711,1,0,0,0,713,714,1,0,0,0,714,187,1,0,0,0,715,
		716,7,11,0,0,716,189,1,0,0,0,717,718,3,16,2,0,718,191,1,0,0,0,719,720,
		3,12,0,0,720,721,1,0,0,0,721,722,6,90,0,0,722,193,1,0,0,0,723,724,5,105,
		0,0,724,725,5,102,0,0,725,726,1,0,0,0,726,727,7,12,0,0,727,728,1,0,0,0,
		728,729,6,91,13,0,729,195,1,0,0,0,730,731,5,101,0,0,731,732,5,108,0,0,
		732,733,5,115,0,0,733,734,5,101,0,0,734,735,5,105,0,0,735,736,5,102,0,
		0,736,737,1,0,0,0,737,738,7,12,0,0,738,739,1,0,0,0,739,740,6,92,13,0,740,
		197,1,0,0,0,741,742,5,101,0,0,742,743,5,108,0,0,743,744,5,115,0,0,744,
		745,5,101,0,0,745,747,1,0,0,0,746,748,7,12,0,0,747,746,1,0,0,0,747,748,
		1,0,0,0,748,199,1,0,0,0,749,750,5,115,0,0,750,751,5,101,0,0,751,752,5,
		116,0,0,752,753,1,0,0,0,753,754,7,12,0,0,754,755,1,0,0,0,755,756,6,94,
		13,0,756,201,1,0,0,0,757,758,5,101,0,0,758,759,5,110,0,0,759,760,5,100,
		0,0,760,761,5,105,0,0,761,762,5,102,0,0,762,203,1,0,0,0,763,764,5,99,0,
		0,764,765,5,97,0,0,765,766,5,108,0,0,766,767,5,108,0,0,767,768,1,0,0,0,
		768,769,7,12,0,0,769,770,1,0,0,0,770,771,6,96,13,0,771,205,1,0,0,0,772,
		773,5,100,0,0,773,774,5,101,0,0,774,775,5,99,0,0,775,776,5,108,0,0,776,
		777,5,97,0,0,777,778,5,114,0,0,778,779,5,101,0,0,779,780,1,0,0,0,780,781,
		7,12,0,0,781,782,1,0,0,0,782,783,6,97,13,0,783,207,1,0,0,0,784,785,5,106,
		0,0,785,786,5,117,0,0,786,787,5,109,0,0,787,788,5,112,0,0,788,789,1,0,
		0,0,789,790,7,12,0,0,790,791,1,0,0,0,791,792,6,98,25,0,792,209,1,0,0,0,
		793,794,5,100,0,0,794,795,5,101,0,0,795,796,5,116,0,0,796,797,5,111,0,
		0,797,798,5,117,0,0,798,799,5,114,0,0,799,800,1,0,0,0,800,801,7,12,0,0,
		801,802,1,0,0,0,802,803,6,99,25,0,803,211,1,0,0,0,804,805,5,114,0,0,805,
		806,5,101,0,0,806,807,5,116,0,0,807,808,5,117,0,0,808,809,5,114,0,0,809,
		810,5,110,0,0,810,812,1,0,0,0,811,813,7,12,0,0,812,811,1,0,0,0,812,813,
		1,0,0,0,813,213,1,0,0,0,814,815,5,101,0,0,815,816,5,110,0,0,816,817,5,
		117,0,0,817,818,5,109,0,0,818,819,1,0,0,0,819,820,7,12,0,0,820,821,1,0,
		0,0,821,822,6,101,26,0,822,215,1,0,0,0,823,824,5,99,0,0,824,825,5,97,0,
		0,825,826,5,115,0,0,826,827,5,101,0,0,827,828,1,0,0,0,828,829,7,12,0,0,
		829,830,1,0,0,0,830,831,6,102,13,0,831,217,1,0,0,0,832,833,5,101,0,0,833,
		834,5,110,0,0,834,835,5,100,0,0,835,836,5,101,0,0,836,837,5,110,0,0,837,
		838,5,117,0,0,838,839,5,109,0,0,839,841,1,0,0,0,840,842,7,12,0,0,841,840,
		1,0,0,0,841,842,1,0,0,0,842,219,1,0,0,0,843,844,5,111,0,0,844,845,5,110,
		0,0,845,846,5,99,0,0,846,847,5,101,0,0,847,221,1,0,0,0,848,849,5,101,0,
		0,849,850,5,110,0,0,850,851,5,100,0,0,851,852,5,111,0,0,852,853,5,110,
		0,0,853,854,5,99,0,0,854,855,5,101,0,0,855,223,1,0,0,0,856,857,5,108,0,
		0,857,858,5,111,0,0,858,859,5,99,0,0,859,860,5,97,0,0,860,861,5,108,0,
		0,861,862,1,0,0,0,862,863,7,12,0,0,863,225,1,0,0,0,864,865,5,62,0,0,865,
		866,5,62,0,0,866,867,1,0,0,0,867,868,6,107,7,0,868,227,1,0,0,0,869,870,
		5,123,0,0,870,871,1,0,0,0,871,872,6,108,27,0,872,873,6,108,28,0,873,874,
		6,108,13,0,874,229,1,0,0,0,875,876,9,0,0,0,876,877,1,0,0,0,877,878,6,109,
		29,0,878,879,6,109,28,0,879,231,1,0,0,0,880,881,3,16,2,0,881,233,1,0,0,
		0,882,883,5,62,0,0,883,884,5,62,0,0,884,885,1,0,0,0,885,886,6,111,7,0,
		886,235,1,0,0,0,887,888,5,123,0,0,888,889,1,0,0,0,889,890,6,112,13,0,890,
		237,1,0,0,0,891,893,8,13,0,0,892,891,1,0,0,0,893,894,1,0,0,0,894,892,1,
		0,0,0,894,895,1,0,0,0,895,239,1,0,0,0,896,897,3,16,2,0,897,241,1,0,0,0,
		898,899,3,18,3,0,899,900,1,0,0,0,900,901,6,115,30,0,901,902,6,115,7,0,
		902,243,1,0,0,0,903,904,5,62,0,0,904,905,5,62,0,0,905,906,1,0,0,0,906,
		907,6,116,23,0,907,908,6,116,7,0,908,245,1,0,0,0,909,910,3,18,3,0,910,
		911,1,0,0,0,911,912,6,117,30,0,912,913,6,117,7,0,913,247,1,0,0,0,914,915,
		3,52,20,0,915,916,1,0,0,0,916,917,6,118,18,0,917,918,6,118,31,0,918,249,
		1,0,0,0,919,920,5,62,0,0,920,921,5,62,0,0,921,922,1,0,0,0,922,923,6,119,
		23,0,923,924,6,119,7,0,924,251,1,0,0,0,47,0,1,2,3,4,5,6,7,8,9,10,11,255,
		265,271,275,280,287,290,294,299,311,323,399,433,436,486,538,545,552,560,
		565,570,577,584,590,596,602,667,669,697,702,713,747,812,841,894,32,0,1,
		0,0,3,0,0,2,0,5,2,0,1,8,0,5,6,0,7,6,0,4,0,0,7,5,0,5,8,0,7,10,0,5,5,0,5,
		3,0,5,7,0,7,21,0,5,4,0,6,0,0,2,5,0,7,17,0,7,16,0,7,79,0,7,66,0,7,59,0,
		7,82,0,1,86,1,5,11,0,5,10,0,7,85,0,2,9,0,7,86,0,7,7,0,2,7,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace Yarn.Compiler

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /Users/desplesda/Work/YarnSpinner/YarnSpinner.Compiler/Grammars/YarnSpinnerLexer.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Yarn.Compiler {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class YarnSpinnerLexer : IndentAwareLexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		INDENT=1, DEDENT=2, BLANK_LINE_FOLLOWING_OPTION=3, WS=4, COMMENT=5, NEWLINE=6, 
		HEADER_WHEN=7, ID=8, BODY_START=9, HEADER_DELIMITER=10, HASHTAG=11, HEADER_WHEN_UNKNOWN=12, 
		REST_OF_LINE=13, BODY_WS=14, BODY_END=15, SHORTCUT_ARROW=16, LINE_GROUP_ARROW=17, 
		COMMAND_START=18, EXPRESSION_START=19, ESCAPED_ANY=20, TEXT_ESCAPE=21, 
		TEXT_COMMENT=22, TEXT=23, UNESCAPABLE_CHARACTER=24, TEXT_COMMANDHASHTAG_WS=25, 
		TEXT_COMMANDHASHTAG_COMMENT=26, TEXT_COMMANDHASHTAG_ERROR=27, HASHTAG_WS=28, 
		HASHTAG_TEXT=29, EXPR_WS=30, EXPRESSION_WHEN_ALWAYS=31, KEYWORD_TRUE=32, 
		KEYWORD_FALSE=33, KEYWORD_NULL=34, OPERATOR_ASSIGNMENT=35, OPERATOR_LOGICAL_LESS_THAN_EQUALS=36, 
		OPERATOR_LOGICAL_GREATER_THAN_EQUALS=37, OPERATOR_LOGICAL_EQUALS=38, OPERATOR_LOGICAL_LESS=39, 
		OPERATOR_LOGICAL_GREATER=40, OPERATOR_LOGICAL_NOT_EQUALS=41, OPERATOR_LOGICAL_AND=42, 
		OPERATOR_LOGICAL_OR=43, OPERATOR_LOGICAL_XOR=44, OPERATOR_LOGICAL_NOT=45, 
		OPERATOR_MATHS_ADDITION_EQUALS=46, OPERATOR_MATHS_SUBTRACTION_EQUALS=47, 
		OPERATOR_MATHS_MULTIPLICATION_EQUALS=48, OPERATOR_MATHS_MODULUS_EQUALS=49, 
		OPERATOR_MATHS_DIVISION_EQUALS=50, OPERATOR_MATHS_ADDITION=51, OPERATOR_MATHS_SUBTRACTION=52, 
		OPERATOR_MATHS_MULTIPLICATION=53, OPERATOR_MATHS_DIVISION=54, OPERATOR_MATHS_MODULUS=55, 
		LPAREN=56, RPAREN=57, COMMA=58, EXPRESSION_AS=59, STRING=60, FUNC_ID=61, 
		EXPRESSION_END=62, VAR_ID=63, DOT=64, NUMBER=65, COMMAND_NEWLINE=66, COMMAND_WS=67, 
		COMMAND_IF=68, COMMAND_ELSEIF=69, COMMAND_ELSE=70, COMMAND_SET=71, COMMAND_ENDIF=72, 
		COMMAND_CALL=73, COMMAND_DECLARE=74, COMMAND_JUMP=75, COMMAND_DETOUR=76, 
		COMMAND_RETURN=77, COMMAND_ENUM=78, COMMAND_CASE=79, COMMAND_ENDENUM=80, 
		COMMAND_ONCE=81, COMMAND_ENDONCE=82, COMMAND_LOCAL=83, COMMAND_END=84, 
		COMMAND_TEXT_NEWLINE=85, COMMAND_TEXT_END=86, COMMAND_EXPRESSION_START=87, 
		COMMAND_TEXT=88, COMMAND_ID_NEWLINE=89, TYPE_STRING=90, TYPE_NUMBER=91, 
		TYPE_BOOL=92;
	public const int
		WHITESPACE=2, COMMENTS=3;
	public const int
		HeaderWhenMode=1, HeaderMode=2, BodyMode=3, TextMode=4, TextEscapedMode=5, 
		TextCommandOrHashtagMode=6, HashtagMode=7, ExpressionMode=8, CommandMode=9, 
		CommandTextMode=10, CommandIDMode=11, CommandIDOrExpressionMode=12;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "WHITESPACE", "COMMENTS"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE", "HeaderWhenMode", "HeaderMode", "BodyMode", "TextMode", 
		"TextEscapedMode", "TextCommandOrHashtagMode", "HashtagMode", "ExpressionMode", 
		"CommandMode", "CommandTextMode", "CommandIDMode", "CommandIDOrExpressionMode"
	};

	public static readonly string[] ruleNames = {
		"WS", "COMMENT", "NEWLINE", "HEADER_WHEN", "ID", "IDENTIFIER_HEAD", "IDENTIFIER_CHARACTER", 
		"IDENTIFIER_CHARACTERS", "BODY_START", "HEADER_DELIMITER", "HASHTAG", 
		"HEADER_WHEN_DELIMITER", "HEADER_WHEN_UNKNOWN", "REST_OF_LINE", "HEADER_NEWLINE", 
		"BODY_WS", "BODY_NEWLINE", "BODY_COMMENT", "BODY_END", "SHORTCUT_ARROW", 
		"LINE_GROUP_ARROW", "COMMAND_START", "BODY_HASHTAG", "EXPRESSION_START", 
		"ESCAPED_BRACKET_START", "ESCAPED_ANY", "ANY", "TEXT_NEWLINE", "TEXT_ESCAPED_MARKUP_BRACKET", 
		"TEXT_ESCAPE", "TEXT_HASHTAG", "TEXT_EXPRESSION_START", "TEXT_COMMAND_START", 
		"TEXT_COMMENT", "TEXT", "TEXT_FRAG", "TEXT_ESCAPED_CHARACTER", "UNESCAPABLE_CHARACTER", 
		"TEXT_COMMANDHASHTAG_WS", "TEXT_COMMANDHASHTAG_COMMENT", "TEXT_COMMANDHASHTAG_COMMAND_START", 
		"TEXT_COMMANDHASHTAG_HASHTAG", "TEXT_COMMANDHASHTAG_NEWLINE", "TEXT_COMMANDHASHTAG_ERROR", 
		"HASHTAG_WS", "HASHTAG_TAG", "HASHTAG_TEXT", "EXPR_WS", "EXPRESSION_WHEN_ALWAYS", 
		"EXPRESSION_WHEN_ONCE", "EXPRESSION_WHEN_IF", "KEYWORD_TRUE", "KEYWORD_FALSE", 
		"KEYWORD_NULL", "OPERATOR_ASSIGNMENT", "OPERATOR_LOGICAL_LESS_THAN_EQUALS", 
		"OPERATOR_LOGICAL_GREATER_THAN_EQUALS", "OPERATOR_LOGICAL_EQUALS", "OPERATOR_LOGICAL_LESS", 
		"OPERATOR_LOGICAL_GREATER", "OPERATOR_LOGICAL_NOT_EQUALS", "OPERATOR_LOGICAL_AND", 
		"OPERATOR_LOGICAL_OR", "OPERATOR_LOGICAL_XOR", "OPERATOR_LOGICAL_NOT", 
		"OPERATOR_MATHS_ADDITION_EQUALS", "OPERATOR_MATHS_SUBTRACTION_EQUALS", 
		"OPERATOR_MATHS_MULTIPLICATION_EQUALS", "OPERATOR_MATHS_MODULUS_EQUALS", 
		"OPERATOR_MATHS_DIVISION_EQUALS", "OPERATOR_MATHS_ADDITION", "OPERATOR_MATHS_SUBTRACTION", 
		"OPERATOR_MATHS_MULTIPLICATION", "OPERATOR_MATHS_DIVISION", "OPERATOR_MATHS_MODULUS", 
		"LPAREN", "RPAREN", "COMMA", "EXPRESSION_AS", "TYPE_STRING", "TYPE_NUMBER", 
		"TYPE_BOOL", "STRING", "FUNC_ID", "EXPRESSION_END", "EXPRESSION_COMMAND_END", 
		"VAR_ID", "DOT", "NUMBER", "EXPRESSION_NEWLINE", "INT", "DIGIT", "COMMAND_NEWLINE", 
		"COMMAND_WS", "COMMAND_IF", "COMMAND_ELSEIF", "COMMAND_ELSE", "COMMAND_SET", 
		"COMMAND_ENDIF", "COMMAND_CALL", "COMMAND_DECLARE", "COMMAND_JUMP", "COMMAND_DETOUR", 
		"COMMAND_RETURN", "COMMAND_ENUM", "COMMAND_CASE", "COMMAND_ENDENUM", "COMMAND_ONCE", 
		"COMMAND_ENDONCE", "COMMAND_LOCAL", "COMMAND_END", "COMMAND_EXPRESSION_AT_START", 
		"COMMAND_ARBITRARY", "COMMAND_TEXT_NEWLINE", "COMMAND_TEXT_END", "COMMAND_EXPRESSION_START", 
		"COMMAND_TEXT", "COMMAND_ID_NEWLINE", "COMMAND_ID", "COMMAND_ID_END", 
		"COMMAND_ID_OR_EXPRESSION_ID", "COMMAND_ID_OR_EXPRESSION_START", "COMMAND_ID_OR_EXPRESSION_END"
	};


	public YarnSpinnerLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public YarnSpinnerLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, null, "'when'", null, "'---'", null, 
		"'#'", null, null, null, "'==='", "'->'", "'=>'", "'<<'", null, null, 
		null, null, null, null, null, null, null, null, null, null, "'always'", 
		"'true'", "'false'", "'null'", null, null, null, null, null, null, null, 
		null, null, null, null, "'+='", "'-='", "'*='", "'%='", "'/='", "'+'", 
		"'-'", "'*'", "'/'", "'%'", "'('", "')'", "','", "'as'", null, null, "'}'", 
		null, "'.'", null, null, null, null, null, null, null, "'endif'", null, 
		null, null, null, null, null, null, null, "'once'", "'endonce'", null, 
		null, null, null, "'{'", null, null, "'string'", "'number'", "'bool'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "INDENT", "DEDENT", "BLANK_LINE_FOLLOWING_OPTION", "WS", "COMMENT", 
		"NEWLINE", "HEADER_WHEN", "ID", "BODY_START", "HEADER_DELIMITER", "HASHTAG", 
		"HEADER_WHEN_UNKNOWN", "REST_OF_LINE", "BODY_WS", "BODY_END", "SHORTCUT_ARROW", 
		"LINE_GROUP_ARROW", "COMMAND_START", "EXPRESSION_START", "ESCAPED_ANY", 
		"TEXT_ESCAPE", "TEXT_COMMENT", "TEXT", "UNESCAPABLE_CHARACTER", "TEXT_COMMANDHASHTAG_WS", 
		"TEXT_COMMANDHASHTAG_COMMENT", "TEXT_COMMANDHASHTAG_ERROR", "HASHTAG_WS", 
		"HASHTAG_TEXT", "EXPR_WS", "EXPRESSION_WHEN_ALWAYS", "KEYWORD_TRUE", "KEYWORD_FALSE", 
		"KEYWORD_NULL", "OPERATOR_ASSIGNMENT", "OPERATOR_LOGICAL_LESS_THAN_EQUALS", 
		"OPERATOR_LOGICAL_GREATER_THAN_EQUALS", "OPERATOR_LOGICAL_EQUALS", "OPERATOR_LOGICAL_LESS", 
		"OPERATOR_LOGICAL_GREATER", "OPERATOR_LOGICAL_NOT_EQUALS", "OPERATOR_LOGICAL_AND", 
		"OPERATOR_LOGICAL_OR", "OPERATOR_LOGICAL_XOR", "OPERATOR_LOGICAL_NOT", 
		"OPERATOR_MATHS_ADDITION_EQUALS", "OPERATOR_MATHS_SUBTRACTION_EQUALS", 
		"OPERATOR_MATHS_MULTIPLICATION_EQUALS", "OPERATOR_MATHS_MODULUS_EQUALS", 
		"OPERATOR_MATHS_DIVISION_EQUALS", "OPERATOR_MATHS_ADDITION", "OPERATOR_MATHS_SUBTRACTION", 
		"OPERATOR_MATHS_MULTIPLICATION", "OPERATOR_MATHS_DIVISION", "OPERATOR_MATHS_MODULUS", 
		"LPAREN", "RPAREN", "COMMA", "EXPRESSION_AS", "STRING", "FUNC_ID", "EXPRESSION_END", 
		"VAR_ID", "DOT", "NUMBER", "COMMAND_NEWLINE", "COMMAND_WS", "COMMAND_IF", 
		"COMMAND_ELSEIF", "COMMAND_ELSE", "COMMAND_SET", "COMMAND_ENDIF", "COMMAND_CALL", 
		"COMMAND_DECLARE", "COMMAND_JUMP", "COMMAND_DETOUR", "COMMAND_RETURN", 
		"COMMAND_ENUM", "COMMAND_CASE", "COMMAND_ENDENUM", "COMMAND_ONCE", "COMMAND_ENDONCE", 
		"COMMAND_LOCAL", "COMMAND_END", "COMMAND_TEXT_NEWLINE", "COMMAND_TEXT_END", 
		"COMMAND_EXPRESSION_START", "COMMAND_TEXT", "COMMAND_ID_NEWLINE", "TYPE_STRING", 
		"TYPE_NUMBER", "TYPE_BOOL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "YarnSpinnerLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static YarnSpinnerLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	public override void Action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 11 : HEADER_WHEN_DELIMITER_action(_localctx, actionIndex); break;
		case 89 : EXPRESSION_NEWLINE_action(_localctx, actionIndex); break;
		}
	}
	private void HEADER_WHEN_DELIMITER_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: SetInWhenClause(true); break;
		}
	}
	private void EXPRESSION_NEWLINE_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: SetInWhenClause(false); break;
		}
	}
	public override bool Sempred(RuleContext _localctx, int ruleIndex, int predIndex) {
		switch (ruleIndex) {
		case 48 : return EXPRESSION_WHEN_ALWAYS_sempred(_localctx, predIndex);
		case 49 : return EXPRESSION_WHEN_ONCE_sempred(_localctx, predIndex);
		case 50 : return EXPRESSION_WHEN_IF_sempred(_localctx, predIndex);
		case 89 : return EXPRESSION_NEWLINE_sempred(_localctx, predIndex);
		}
		return true;
	}
	private bool EXPRESSION_WHEN_ALWAYS_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 0: return IsInWhenClause();;
		}
		return true;
	}
	private bool EXPRESSION_WHEN_ONCE_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 1: return IsInWhenClause();;
		}
		return true;
	}
	private bool EXPRESSION_WHEN_IF_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 2: return IsInWhenClause();;
		}
		return true;
	}
	private bool EXPRESSION_NEWLINE_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 3: return IsInWhenClause();;
		}
		return true;
	}

	private static int[] _serializedATN = {
		4,0,92,955,6,-1,6,-1,6,-1,6,-1,6,-1,6,-1,6,-1,6,-1,6,-1,6,-1,6,-1,6,-1,
		6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,
		8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,
		15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,
		22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,
		29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,
		36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,
		43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,
		50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,
		57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,
		64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
		71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,2,78,7,
		78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,84,2,85,7,
		85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,7,91,2,92,7,
		92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,98,7,98,2,99,7,
		99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,7,104,2,105,7,
		105,2,106,7,106,2,107,7,107,2,108,7,108,2,109,7,109,2,110,7,110,2,111,
		7,111,2,112,7,112,2,113,7,113,2,114,7,114,2,115,7,115,2,116,7,116,2,117,
		7,117,2,118,7,118,2,119,7,119,2,120,7,120,2,121,7,121,2,122,7,122,1,0,
		4,0,261,8,0,11,0,12,0,262,1,0,1,0,1,1,1,1,1,1,1,1,5,1,271,8,1,10,1,12,
		1,274,9,1,1,1,1,1,1,2,3,2,279,8,2,1,2,1,2,3,2,283,8,2,1,2,5,2,286,8,2,
		10,2,12,2,289,9,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,3,4,302,
		8,4,1,5,3,5,305,8,5,1,6,1,6,3,6,309,8,6,1,7,4,7,312,8,7,11,7,12,7,313,
		1,8,1,8,1,8,1,8,1,8,1,8,1,9,3,9,323,8,9,1,9,1,9,3,9,327,8,9,1,9,1,9,1,
		10,1,10,1,10,1,10,1,11,3,11,336,8,11,1,11,1,11,3,11,340,8,11,1,11,1,11,
		1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,13,4,13,352,8,13,11,13,12,13,353,
		1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,
		1,16,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,
		1,19,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,
		1,22,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,
		1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,
		1,28,1,28,1,28,1,28,3,28,430,8,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,
		30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,
		32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,34,4,34,462,8,34,11,34,12,34,463,
		1,34,3,34,467,8,34,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,
		37,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,40,1,
		40,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,44,1,
		44,1,44,1,44,1,45,1,45,1,45,1,45,1,46,4,46,515,8,46,11,46,12,46,516,1,
		46,1,46,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,
		48,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,
		50,1,50,1,50,1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,
		53,1,53,1,53,1,53,1,53,1,54,1,54,1,54,3,54,569,8,54,1,55,1,55,1,55,1,55,
		1,55,3,55,576,8,55,1,56,1,56,1,56,1,56,1,56,3,56,583,8,56,1,57,1,57,1,
		57,1,57,1,57,1,57,3,57,591,8,57,1,58,1,58,1,58,3,58,596,8,58,1,59,1,59,
		1,59,3,59,601,8,59,1,60,1,60,1,60,1,60,1,60,3,60,608,8,60,1,61,1,61,1,
		61,1,61,1,61,3,61,615,8,61,1,62,1,62,1,62,1,62,3,62,621,8,62,1,63,1,63,
		1,63,1,63,3,63,627,8,63,1,64,1,64,1,64,1,64,3,64,633,8,64,1,65,1,65,1,
		65,1,66,1,66,1,66,1,67,1,67,1,67,1,68,1,68,1,68,1,69,1,69,1,69,1,70,1,
		70,1,71,1,71,1,72,1,72,1,73,1,73,1,74,1,74,1,75,1,75,1,76,1,76,1,77,1,
		77,1,78,1,78,1,78,1,79,1,79,1,79,1,79,1,79,1,79,1,79,1,79,1,79,1,80,1,
		80,1,80,1,80,1,80,1,80,1,80,1,80,1,80,1,81,1,81,1,81,1,81,1,81,1,81,1,
		81,1,82,1,82,1,82,1,82,5,82,698,8,82,10,82,12,82,701,9,82,1,82,1,82,1,
		83,1,83,1,84,1,84,1,84,1,84,1,85,1,85,1,85,1,85,1,85,1,85,1,85,1,86,1,
		86,1,86,1,87,1,87,1,88,1,88,1,88,1,88,1,88,3,88,728,8,88,1,89,4,89,731,
		8,89,11,89,12,89,732,1,89,1,89,1,89,1,89,1,89,1,89,1,90,4,90,742,8,90,
		11,90,12,90,743,1,91,1,91,1,92,1,92,1,93,1,93,1,93,1,93,1,94,1,94,1,94,
		1,94,1,94,1,94,1,94,1,95,1,95,1,95,1,95,1,95,1,95,1,95,1,95,1,95,1,95,
		1,95,1,96,1,96,1,96,1,96,1,96,1,96,3,96,778,8,96,1,97,1,97,1,97,1,97,1,
		97,1,97,1,97,1,97,1,98,1,98,1,98,1,98,1,98,1,98,1,99,1,99,1,99,1,99,1,
		99,1,99,1,99,1,99,1,99,1,100,1,100,1,100,1,100,1,100,1,100,1,100,1,100,
		1,100,1,100,1,100,1,100,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,
		1,101,1,102,1,102,1,102,1,102,1,102,1,102,1,102,1,102,1,102,1,102,1,102,
		1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,103,3,103,843,8,103,1,104,
		1,104,1,104,1,104,1,104,1,104,1,104,1,104,1,104,1,105,1,105,1,105,1,105,
		1,105,1,105,1,105,1,105,1,105,1,106,1,106,1,106,1,106,1,106,1,106,1,106,
		1,106,1,106,3,106,872,8,106,1,107,1,107,1,107,1,107,1,107,1,108,1,108,
		1,108,1,108,1,108,1,108,1,108,1,108,1,109,1,109,1,109,1,109,1,109,1,109,
		1,109,1,109,1,110,1,110,1,110,1,110,1,110,1,111,1,111,1,111,1,111,1,111,
		1,111,1,112,1,112,1,112,1,112,1,112,1,113,1,113,1,114,1,114,1,114,1,114,
		1,114,1,115,1,115,1,115,1,115,1,116,4,116,923,8,116,11,116,12,116,924,
		1,117,1,117,1,118,1,118,1,118,1,118,1,118,1,119,1,119,1,119,1,119,1,119,
		1,119,1,120,1,120,1,120,1,120,1,120,1,121,1,121,1,121,1,121,1,121,1,122,
		1,122,1,122,1,122,1,122,1,122,0,0,123,13,4,15,5,17,6,19,7,21,8,23,0,25,
		0,27,0,29,9,31,10,33,11,35,0,37,12,39,13,41,0,43,14,45,0,47,0,49,15,51,
		16,53,17,55,18,57,0,59,19,61,0,63,20,65,0,67,0,69,0,71,21,73,0,75,0,77,
		0,79,22,81,23,83,0,85,0,87,24,89,25,91,26,93,0,95,0,97,0,99,27,101,28,
		103,0,105,29,107,30,109,31,111,0,113,0,115,32,117,33,119,34,121,35,123,
		36,125,37,127,38,129,39,131,40,133,41,135,42,137,43,139,44,141,45,143,
		46,145,47,147,48,149,49,151,50,153,51,155,52,157,53,159,54,161,55,163,
		56,165,57,167,58,169,59,171,90,173,91,175,92,177,60,179,61,181,62,183,
		0,185,63,187,64,189,65,191,0,193,0,195,0,197,66,199,67,201,68,203,69,205,
		70,207,71,209,72,211,73,213,74,215,75,217,76,219,77,221,78,223,79,225,
		80,227,81,229,82,231,83,233,84,235,0,237,0,239,85,241,86,243,87,245,88,
		247,89,249,0,251,0,253,0,255,0,257,0,13,0,1,2,3,4,5,6,7,8,9,10,11,12,13,
		2,0,9,9,32,32,2,0,10,10,13,13,49,0,65,90,95,95,97,122,168,168,170,170,
		173,173,175,175,178,181,183,186,188,190,192,214,216,246,248,767,880,5759,
		5761,6157,6159,7615,7680,8191,8203,8205,8234,8238,8255,8256,8276,8276,
		8288,8399,8448,8591,9312,9471,10102,10131,11264,11775,11904,12287,12292,
		12295,12321,12335,12337,55295,63744,64829,64832,64975,65008,65055,65072,
		65092,65095,65533,65536,131069,131072,196605,196608,262141,262144,327677,
		327680,393213,393216,458749,458752,524285,524288,589821,589824,655357,
		655360,720893,720896,786429,786432,851965,851968,917501,917504,983037,
		5,0,48,57,768,879,7616,7679,8400,8447,65056,65071,2,0,47,47,60,60,7,0,
		10,10,13,13,35,35,47,47,60,60,92,92,123,123,7,0,35,35,47,47,60,60,62,62,
		92,92,123,123,125,125,5,0,9,10,13,13,32,32,35,36,60,60,4,0,10,10,13,13,
		34,34,92,92,2,0,34,34,92,92,1,0,48,57,10,0,9,13,32,32,133,133,160,160,
		5760,5760,8192,8202,8232,8233,8239,8239,8287,8287,12288,12288,4,0,10,10,
		13,13,62,62,123,123,974,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,
		0,0,0,0,21,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,1,35,1,0,0,0,
		1,37,1,0,0,0,2,39,1,0,0,0,2,41,1,0,0,0,3,43,1,0,0,0,3,45,1,0,0,0,3,47,
		1,0,0,0,3,49,1,0,0,0,3,51,1,0,0,0,3,53,1,0,0,0,3,55,1,0,0,0,3,57,1,0,0,
		0,3,59,1,0,0,0,3,61,1,0,0,0,3,63,1,0,0,0,3,65,1,0,0,0,4,67,1,0,0,0,4,69,
		1,0,0,0,4,71,1,0,0,0,4,73,1,0,0,0,4,75,1,0,0,0,4,77,1,0,0,0,4,79,1,0,0,
		0,4,81,1,0,0,0,5,85,1,0,0,0,5,87,1,0,0,0,6,89,1,0,0,0,6,91,1,0,0,0,6,93,
		1,0,0,0,6,95,1,0,0,0,6,97,1,0,0,0,6,99,1,0,0,0,7,101,1,0,0,0,7,103,1,0,
		0,0,7,105,1,0,0,0,8,107,1,0,0,0,8,109,1,0,0,0,8,111,1,0,0,0,8,113,1,0,
		0,0,8,115,1,0,0,0,8,117,1,0,0,0,8,119,1,0,0,0,8,121,1,0,0,0,8,123,1,0,
		0,0,8,125,1,0,0,0,8,127,1,0,0,0,8,129,1,0,0,0,8,131,1,0,0,0,8,133,1,0,
		0,0,8,135,1,0,0,0,8,137,1,0,0,0,8,139,1,0,0,0,8,141,1,0,0,0,8,143,1,0,
		0,0,8,145,1,0,0,0,8,147,1,0,0,0,8,149,1,0,0,0,8,151,1,0,0,0,8,153,1,0,
		0,0,8,155,1,0,0,0,8,157,1,0,0,0,8,159,1,0,0,0,8,161,1,0,0,0,8,163,1,0,
		0,0,8,165,1,0,0,0,8,167,1,0,0,0,8,169,1,0,0,0,8,171,1,0,0,0,8,173,1,0,
		0,0,8,175,1,0,0,0,8,177,1,0,0,0,8,179,1,0,0,0,8,181,1,0,0,0,8,183,1,0,
		0,0,8,185,1,0,0,0,8,187,1,0,0,0,8,189,1,0,0,0,8,191,1,0,0,0,9,197,1,0,
		0,0,9,199,1,0,0,0,9,201,1,0,0,0,9,203,1,0,0,0,9,205,1,0,0,0,9,207,1,0,
		0,0,9,209,1,0,0,0,9,211,1,0,0,0,9,213,1,0,0,0,9,215,1,0,0,0,9,217,1,0,
		0,0,9,219,1,0,0,0,9,221,1,0,0,0,9,223,1,0,0,0,9,225,1,0,0,0,9,227,1,0,
		0,0,9,229,1,0,0,0,9,231,1,0,0,0,9,233,1,0,0,0,9,235,1,0,0,0,9,237,1,0,
		0,0,10,239,1,0,0,0,10,241,1,0,0,0,10,243,1,0,0,0,10,245,1,0,0,0,11,247,
		1,0,0,0,11,249,1,0,0,0,11,251,1,0,0,0,12,253,1,0,0,0,12,255,1,0,0,0,12,
		257,1,0,0,0,13,260,1,0,0,0,15,266,1,0,0,0,17,282,1,0,0,0,19,292,1,0,0,
		0,21,299,1,0,0,0,23,304,1,0,0,0,25,308,1,0,0,0,27,311,1,0,0,0,29,315,1,
		0,0,0,31,322,1,0,0,0,33,330,1,0,0,0,35,335,1,0,0,0,37,346,1,0,0,0,39,351,
		1,0,0,0,41,355,1,0,0,0,43,361,1,0,0,0,45,365,1,0,0,0,47,370,1,0,0,0,49,
		375,1,0,0,0,51,381,1,0,0,0,53,384,1,0,0,0,55,387,1,0,0,0,57,392,1,0,0,
		0,59,398,1,0,0,0,61,403,1,0,0,0,63,409,1,0,0,0,65,415,1,0,0,0,67,420,1,
		0,0,0,69,429,1,0,0,0,71,433,1,0,0,0,73,438,1,0,0,0,75,444,1,0,0,0,77,449,
		1,0,0,0,79,456,1,0,0,0,81,466,1,0,0,0,83,468,1,0,0,0,85,470,1,0,0,0,87,
		475,1,0,0,0,89,479,1,0,0,0,91,483,1,0,0,0,93,487,1,0,0,0,95,493,1,0,0,
		0,97,498,1,0,0,0,99,503,1,0,0,0,101,505,1,0,0,0,103,509,1,0,0,0,105,514,
		1,0,0,0,107,520,1,0,0,0,109,524,1,0,0,0,111,533,1,0,0,0,113,542,1,0,0,
		0,115,549,1,0,0,0,117,554,1,0,0,0,119,560,1,0,0,0,121,568,1,0,0,0,123,
		575,1,0,0,0,125,582,1,0,0,0,127,590,1,0,0,0,129,595,1,0,0,0,131,600,1,
		0,0,0,133,607,1,0,0,0,135,614,1,0,0,0,137,620,1,0,0,0,139,626,1,0,0,0,
		141,632,1,0,0,0,143,634,1,0,0,0,145,637,1,0,0,0,147,640,1,0,0,0,149,643,
		1,0,0,0,151,646,1,0,0,0,153,649,1,0,0,0,155,651,1,0,0,0,157,653,1,0,0,
		0,159,655,1,0,0,0,161,657,1,0,0,0,163,659,1,0,0,0,165,661,1,0,0,0,167,
		663,1,0,0,0,169,665,1,0,0,0,171,668,1,0,0,0,173,677,1,0,0,0,175,686,1,
		0,0,0,177,693,1,0,0,0,179,704,1,0,0,0,181,706,1,0,0,0,183,710,1,0,0,0,
		185,717,1,0,0,0,187,720,1,0,0,0,189,727,1,0,0,0,191,730,1,0,0,0,193,741,
		1,0,0,0,195,745,1,0,0,0,197,747,1,0,0,0,199,749,1,0,0,0,201,753,1,0,0,
		0,203,760,1,0,0,0,205,771,1,0,0,0,207,779,1,0,0,0,209,787,1,0,0,0,211,
		793,1,0,0,0,213,802,1,0,0,0,215,814,1,0,0,0,217,823,1,0,0,0,219,834,1,
		0,0,0,221,844,1,0,0,0,223,853,1,0,0,0,225,862,1,0,0,0,227,873,1,0,0,0,
		229,878,1,0,0,0,231,886,1,0,0,0,233,894,1,0,0,0,235,899,1,0,0,0,237,905,
		1,0,0,0,239,910,1,0,0,0,241,912,1,0,0,0,243,917,1,0,0,0,245,922,1,0,0,
		0,247,926,1,0,0,0,249,928,1,0,0,0,251,933,1,0,0,0,253,939,1,0,0,0,255,
		944,1,0,0,0,257,949,1,0,0,0,259,261,7,0,0,0,260,259,1,0,0,0,261,262,1,
		0,0,0,262,260,1,0,0,0,262,263,1,0,0,0,263,264,1,0,0,0,264,265,6,0,0,0,
		265,14,1,0,0,0,266,267,5,47,0,0,267,268,5,47,0,0,268,272,1,0,0,0,269,271,
		8,1,0,0,270,269,1,0,0,0,271,274,1,0,0,0,272,270,1,0,0,0,272,273,1,0,0,
		0,273,275,1,0,0,0,274,272,1,0,0,0,275,276,6,1,1,0,276,16,1,0,0,0,277,279,
		5,13,0,0,278,277,1,0,0,0,278,279,1,0,0,0,279,280,1,0,0,0,280,283,5,10,
		0,0,281,283,5,13,0,0,282,278,1,0,0,0,282,281,1,0,0,0,283,287,1,0,0,0,284,
		286,7,0,0,0,285,284,1,0,0,0,286,289,1,0,0,0,287,285,1,0,0,0,287,288,1,
		0,0,0,288,290,1,0,0,0,289,287,1,0,0,0,290,291,6,2,2,0,291,18,1,0,0,0,292,
		293,5,119,0,0,293,294,5,104,0,0,294,295,5,101,0,0,295,296,5,110,0,0,296,
		297,1,0,0,0,297,298,6,3,3,0,298,20,1,0,0,0,299,301,3,23,5,0,300,302,3,
		27,7,0,301,300,1,0,0,0,301,302,1,0,0,0,302,22,1,0,0,0,303,305,7,2,0,0,
		304,303,1,0,0,0,305,24,1,0,0,0,306,309,7,3,0,0,307,309,3,23,5,0,308,306,
		1,0,0,0,308,307,1,0,0,0,309,26,1,0,0,0,310,312,3,25,6,0,311,310,1,0,0,
		0,312,313,1,0,0,0,313,311,1,0,0,0,313,314,1,0,0,0,314,28,1,0,0,0,315,316,
		5,45,0,0,316,317,5,45,0,0,317,318,5,45,0,0,318,319,1,0,0,0,319,320,6,8,
		4,0,320,30,1,0,0,0,321,323,3,13,0,0,322,321,1,0,0,0,322,323,1,0,0,0,323,
		324,1,0,0,0,324,326,5,58,0,0,325,327,3,13,0,0,326,325,1,0,0,0,326,327,
		1,0,0,0,327,328,1,0,0,0,328,329,6,9,5,0,329,32,1,0,0,0,330,331,5,35,0,
		0,331,332,1,0,0,0,332,333,6,10,6,0,333,34,1,0,0,0,334,336,3,13,0,0,335,
		334,1,0,0,0,335,336,1,0,0,0,336,337,1,0,0,0,337,339,5,58,0,0,338,340,3,
		13,0,0,339,338,1,0,0,0,339,340,1,0,0,0,340,341,1,0,0,0,341,342,6,11,7,
		0,342,343,1,0,0,0,343,344,6,11,8,0,344,345,6,11,9,0,345,36,1,0,0,0,346,
		347,9,0,0,0,347,348,1,0,0,0,348,349,6,12,10,0,349,38,1,0,0,0,350,352,8,
		1,0,0,351,350,1,0,0,0,352,353,1,0,0,0,353,351,1,0,0,0,353,354,1,0,0,0,
		354,40,1,0,0,0,355,356,3,17,2,0,356,357,1,0,0,0,357,358,6,14,11,0,358,
		359,6,14,2,0,359,360,6,14,10,0,360,42,1,0,0,0,361,362,3,13,0,0,362,363,
		1,0,0,0,363,364,6,15,0,0,364,44,1,0,0,0,365,366,3,17,2,0,366,367,1,0,0,
		0,367,368,6,16,11,0,368,369,6,16,2,0,369,46,1,0,0,0,370,371,3,15,1,0,371,
		372,1,0,0,0,372,373,6,17,12,0,373,374,6,17,1,0,374,48,1,0,0,0,375,376,
		5,61,0,0,376,377,5,61,0,0,377,378,5,61,0,0,378,379,1,0,0,0,379,380,6,18,
		10,0,380,50,1,0,0,0,381,382,5,45,0,0,382,383,5,62,0,0,383,52,1,0,0,0,384,
		385,5,61,0,0,385,386,5,62,0,0,386,54,1,0,0,0,387,388,5,60,0,0,388,389,
		5,60,0,0,389,390,1,0,0,0,390,391,6,21,13,0,391,56,1,0,0,0,392,393,5,35,
		0,0,393,394,1,0,0,0,394,395,6,22,14,0,395,396,6,22,15,0,396,397,6,22,6,
		0,397,58,1,0,0,0,398,399,5,123,0,0,399,400,1,0,0,0,400,401,6,23,16,0,401,
		402,6,23,17,0,402,60,1,0,0,0,403,404,5,92,0,0,404,405,5,91,0,0,405,406,
		1,0,0,0,406,407,6,24,18,0,407,408,6,24,16,0,408,62,1,0,0,0,409,410,5,92,
		0,0,410,411,1,0,0,0,411,412,6,25,0,0,412,413,6,25,16,0,413,414,6,25,19,
		0,414,64,1,0,0,0,415,416,9,0,0,0,416,417,1,0,0,0,417,418,6,26,18,0,418,
		419,6,26,16,0,419,66,1,0,0,0,420,421,3,17,2,0,421,422,1,0,0,0,422,423,
		6,27,11,0,423,424,6,27,10,0,424,68,1,0,0,0,425,426,5,92,0,0,426,430,5,
		91,0,0,427,428,5,92,0,0,428,430,5,93,0,0,429,425,1,0,0,0,429,427,1,0,0,
		0,430,431,1,0,0,0,431,432,6,28,18,0,432,70,1,0,0,0,433,434,5,92,0,0,434,
		435,1,0,0,0,435,436,6,29,0,0,436,437,6,29,19,0,437,72,1,0,0,0,438,439,
		3,33,10,0,439,440,1,0,0,0,440,441,6,30,14,0,441,442,6,30,20,0,442,443,
		6,30,6,0,443,74,1,0,0,0,444,445,5,123,0,0,445,446,1,0,0,0,446,447,6,31,
		21,0,447,448,6,31,17,0,448,76,1,0,0,0,449,450,5,60,0,0,450,451,5,60,0,
		0,451,452,1,0,0,0,452,453,6,32,22,0,453,454,6,32,20,0,454,455,6,32,13,
		0,455,78,1,0,0,0,456,457,3,15,1,0,457,458,1,0,0,0,458,459,6,33,1,0,459,
		80,1,0,0,0,460,462,3,83,35,0,461,460,1,0,0,0,462,463,1,0,0,0,463,461,1,
		0,0,0,463,464,1,0,0,0,464,467,1,0,0,0,465,467,7,4,0,0,466,461,1,0,0,0,
		466,465,1,0,0,0,467,82,1,0,0,0,468,469,8,5,0,0,469,84,1,0,0,0,470,471,
		7,6,0,0,471,472,1,0,0,0,472,473,6,36,18,0,473,474,6,36,10,0,474,86,1,0,
		0,0,475,476,9,0,0,0,476,477,1,0,0,0,477,478,6,37,10,0,478,88,1,0,0,0,479,
		480,3,13,0,0,480,481,1,0,0,0,481,482,6,38,0,0,482,90,1,0,0,0,483,484,3,
		15,1,0,484,485,1,0,0,0,485,486,6,39,1,0,486,92,1,0,0,0,487,488,5,60,0,
		0,488,489,5,60,0,0,489,490,1,0,0,0,490,491,6,40,22,0,491,492,6,40,13,0,
		492,94,1,0,0,0,493,494,5,35,0,0,494,495,1,0,0,0,495,496,6,41,14,0,496,
		497,6,41,6,0,497,96,1,0,0,0,498,499,3,17,2,0,499,500,1,0,0,0,500,501,6,
		42,11,0,501,502,6,42,10,0,502,98,1,0,0,0,503,504,9,0,0,0,504,100,1,0,0,
		0,505,506,3,13,0,0,506,507,1,0,0,0,507,508,6,44,0,0,508,102,1,0,0,0,509,
		510,3,33,10,0,510,511,1,0,0,0,511,512,6,45,14,0,512,104,1,0,0,0,513,515,
		8,7,0,0,514,513,1,0,0,0,515,516,1,0,0,0,516,514,1,0,0,0,516,517,1,0,0,
		0,517,518,1,0,0,0,518,519,6,46,10,0,519,106,1,0,0,0,520,521,3,13,0,0,521,
		522,1,0,0,0,522,523,6,47,0,0,523,108,1,0,0,0,524,525,5,97,0,0,525,526,
		5,108,0,0,526,527,5,119,0,0,527,528,5,97,0,0,528,529,5,121,0,0,529,530,
		5,115,0,0,530,531,1,0,0,0,531,532,4,48,0,0,532,110,1,0,0,0,533,534,5,111,
		0,0,534,535,5,110,0,0,535,536,5,99,0,0,536,537,5,101,0,0,537,538,1,0,0,
		0,538,539,4,49,1,0,539,540,1,0,0,0,540,541,6,49,23,0,541,112,1,0,0,0,542,
		543,5,105,0,0,543,544,5,102,0,0,544,545,1,0,0,0,545,546,4,50,2,0,546,547,
		1,0,0,0,547,548,6,50,24,0,548,114,1,0,0,0,549,550,5,116,0,0,550,551,5,
		114,0,0,551,552,5,117,0,0,552,553,5,101,0,0,553,116,1,0,0,0,554,555,5,
		102,0,0,555,556,5,97,0,0,556,557,5,108,0,0,557,558,5,115,0,0,558,559,5,
		101,0,0,559,118,1,0,0,0,560,561,5,110,0,0,561,562,5,117,0,0,562,563,5,
		108,0,0,563,564,5,108,0,0,564,120,1,0,0,0,565,569,5,61,0,0,566,567,5,116,
		0,0,567,569,5,111,0,0,568,565,1,0,0,0,568,566,1,0,0,0,569,122,1,0,0,0,
		570,571,5,60,0,0,571,576,5,61,0,0,572,573,5,108,0,0,573,574,5,116,0,0,
		574,576,5,101,0,0,575,570,1,0,0,0,575,572,1,0,0,0,576,124,1,0,0,0,577,
		578,5,62,0,0,578,583,5,61,0,0,579,580,5,103,0,0,580,581,5,116,0,0,581,
		583,5,101,0,0,582,577,1,0,0,0,582,579,1,0,0,0,583,126,1,0,0,0,584,585,
		5,61,0,0,585,591,5,61,0,0,586,587,5,105,0,0,587,591,5,115,0,0,588,589,
		5,101,0,0,589,591,5,113,0,0,590,584,1,0,0,0,590,586,1,0,0,0,590,588,1,
		0,0,0,591,128,1,0,0,0,592,596,5,60,0,0,593,594,5,108,0,0,594,596,5,116,
		0,0,595,592,1,0,0,0,595,593,1,0,0,0,596,130,1,0,0,0,597,601,5,62,0,0,598,
		599,5,103,0,0,599,601,5,116,0,0,600,597,1,0,0,0,600,598,1,0,0,0,601,132,
		1,0,0,0,602,603,5,33,0,0,603,608,5,61,0,0,604,605,5,110,0,0,605,606,5,
		101,0,0,606,608,5,113,0,0,607,602,1,0,0,0,607,604,1,0,0,0,608,134,1,0,
		0,0,609,610,5,97,0,0,610,611,5,110,0,0,611,615,5,100,0,0,612,613,5,38,
		0,0,613,615,5,38,0,0,614,609,1,0,0,0,614,612,1,0,0,0,615,136,1,0,0,0,616,
		617,5,111,0,0,617,621,5,114,0,0,618,619,5,124,0,0,619,621,5,124,0,0,620,
		616,1,0,0,0,620,618,1,0,0,0,621,138,1,0,0,0,622,623,5,120,0,0,623,624,
		5,111,0,0,624,627,5,114,0,0,625,627,5,94,0,0,626,622,1,0,0,0,626,625,1,
		0,0,0,627,140,1,0,0,0,628,629,5,110,0,0,629,630,5,111,0,0,630,633,5,116,
		0,0,631,633,5,33,0,0,632,628,1,0,0,0,632,631,1,0,0,0,633,142,1,0,0,0,634,
		635,5,43,0,0,635,636,5,61,0,0,636,144,1,0,0,0,637,638,5,45,0,0,638,639,
		5,61,0,0,639,146,1,0,0,0,640,641,5,42,0,0,641,642,5,61,0,0,642,148,1,0,
		0,0,643,644,5,37,0,0,644,645,5,61,0,0,645,150,1,0,0,0,646,647,5,47,0,0,
		647,648,5,61,0,0,648,152,1,0,0,0,649,650,5,43,0,0,650,154,1,0,0,0,651,
		652,5,45,0,0,652,156,1,0,0,0,653,654,5,42,0,0,654,158,1,0,0,0,655,656,
		5,47,0,0,656,160,1,0,0,0,657,658,5,37,0,0,658,162,1,0,0,0,659,660,5,40,
		0,0,660,164,1,0,0,0,661,662,5,41,0,0,662,166,1,0,0,0,663,664,5,44,0,0,
		664,168,1,0,0,0,665,666,5,97,0,0,666,667,5,115,0,0,667,170,1,0,0,0,668,
		669,5,115,0,0,669,670,5,116,0,0,670,671,5,114,0,0,671,672,5,105,0,0,672,
		673,5,110,0,0,673,674,5,103,0,0,674,675,1,0,0,0,675,676,6,79,25,0,676,
		172,1,0,0,0,677,678,5,110,0,0,678,679,5,117,0,0,679,680,5,109,0,0,680,
		681,5,98,0,0,681,682,5,101,0,0,682,683,5,114,0,0,683,684,1,0,0,0,684,685,
		6,80,25,0,685,174,1,0,0,0,686,687,5,98,0,0,687,688,5,111,0,0,688,689,5,
		111,0,0,689,690,5,108,0,0,690,691,1,0,0,0,691,692,6,81,25,0,692,176,1,
		0,0,0,693,699,5,34,0,0,694,698,8,8,0,0,695,696,5,92,0,0,696,698,7,9,0,
		0,697,694,1,0,0,0,697,695,1,0,0,0,698,701,1,0,0,0,699,697,1,0,0,0,699,
		700,1,0,0,0,700,702,1,0,0,0,701,699,1,0,0,0,702,703,5,34,0,0,703,178,1,
		0,0,0,704,705,3,21,4,0,705,180,1,0,0,0,706,707,5,125,0,0,707,708,1,0,0,
		0,708,709,6,84,10,0,709,182,1,0,0,0,710,711,5,62,0,0,711,712,5,62,0,0,
		712,713,1,0,0,0,713,714,6,85,26,0,714,715,6,85,10,0,715,716,6,85,10,0,
		716,184,1,0,0,0,717,718,5,36,0,0,718,719,3,21,4,0,719,186,1,0,0,0,720,
		721,5,46,0,0,721,188,1,0,0,0,722,728,3,193,90,0,723,724,3,193,90,0,724,
		725,5,46,0,0,725,726,3,193,90,0,726,728,1,0,0,0,727,722,1,0,0,0,727,723,
		1,0,0,0,728,190,1,0,0,0,729,731,7,1,0,0,730,729,1,0,0,0,731,732,1,0,0,
		0,732,730,1,0,0,0,732,733,1,0,0,0,733,734,1,0,0,0,734,735,4,89,3,0,735,
		736,6,89,27,0,736,737,1,0,0,0,737,738,6,89,11,0,738,739,6,89,10,0,739,
		192,1,0,0,0,740,742,3,195,91,0,741,740,1,0,0,0,742,743,1,0,0,0,743,741,
		1,0,0,0,743,744,1,0,0,0,744,194,1,0,0,0,745,746,7,10,0,0,746,196,1,0,0,
		0,747,748,3,17,2,0,748,198,1,0,0,0,749,750,3,13,0,0,750,751,1,0,0,0,751,
		752,6,93,0,0,752,200,1,0,0,0,753,754,5,105,0,0,754,755,5,102,0,0,755,756,
		1,0,0,0,756,757,7,11,0,0,757,758,1,0,0,0,758,759,6,94,17,0,759,202,1,0,
		0,0,760,761,5,101,0,0,761,762,5,108,0,0,762,763,5,115,0,0,763,764,5,101,
		0,0,764,765,5,105,0,0,765,766,5,102,0,0,766,767,1,0,0,0,767,768,7,11,0,
		0,768,769,1,0,0,0,769,770,6,95,17,0,770,204,1,0,0,0,771,772,5,101,0,0,
		772,773,5,108,0,0,773,774,5,115,0,0,774,775,5,101,0,0,775,777,1,0,0,0,
		776,778,7,11,0,0,777,776,1,0,0,0,777,778,1,0,0,0,778,206,1,0,0,0,779,780,
		5,115,0,0,780,781,5,101,0,0,781,782,5,116,0,0,782,783,1,0,0,0,783,784,
		7,11,0,0,784,785,1,0,0,0,785,786,6,97,17,0,786,208,1,0,0,0,787,788,5,101,
		0,0,788,789,5,110,0,0,789,790,5,100,0,0,790,791,5,105,0,0,791,792,5,102,
		0,0,792,210,1,0,0,0,793,794,5,99,0,0,794,795,5,97,0,0,795,796,5,108,0,
		0,796,797,5,108,0,0,797,798,1,0,0,0,798,799,7,11,0,0,799,800,1,0,0,0,800,
		801,6,99,17,0,801,212,1,0,0,0,802,803,5,100,0,0,803,804,5,101,0,0,804,
		805,5,99,0,0,805,806,5,108,0,0,806,807,5,97,0,0,807,808,5,114,0,0,808,
		809,5,101,0,0,809,810,1,0,0,0,810,811,7,11,0,0,811,812,1,0,0,0,812,813,
		6,100,17,0,813,214,1,0,0,0,814,815,5,106,0,0,815,816,5,117,0,0,816,817,
		5,109,0,0,817,818,5,112,0,0,818,819,1,0,0,0,819,820,7,11,0,0,820,821,1,
		0,0,0,821,822,6,101,28,0,822,216,1,0,0,0,823,824,5,100,0,0,824,825,5,101,
		0,0,825,826,5,116,0,0,826,827,5,111,0,0,827,828,5,117,0,0,828,829,5,114,
		0,0,829,830,1,0,0,0,830,831,7,11,0,0,831,832,1,0,0,0,832,833,6,102,28,
		0,833,218,1,0,0,0,834,835,5,114,0,0,835,836,5,101,0,0,836,837,5,116,0,
		0,837,838,5,117,0,0,838,839,5,114,0,0,839,840,5,110,0,0,840,842,1,0,0,
		0,841,843,7,11,0,0,842,841,1,0,0,0,842,843,1,0,0,0,843,220,1,0,0,0,844,
		845,5,101,0,0,845,846,5,110,0,0,846,847,5,117,0,0,847,848,5,109,0,0,848,
		849,1,0,0,0,849,850,7,11,0,0,850,851,1,0,0,0,851,852,6,104,29,0,852,222,
		1,0,0,0,853,854,5,99,0,0,854,855,5,97,0,0,855,856,5,115,0,0,856,857,5,
		101,0,0,857,858,1,0,0,0,858,859,7,11,0,0,859,860,1,0,0,0,860,861,6,105,
		17,0,861,224,1,0,0,0,862,863,5,101,0,0,863,864,5,110,0,0,864,865,5,100,
		0,0,865,866,5,101,0,0,866,867,5,110,0,0,867,868,5,117,0,0,868,869,5,109,
		0,0,869,871,1,0,0,0,870,872,7,11,0,0,871,870,1,0,0,0,871,872,1,0,0,0,872,
		226,1,0,0,0,873,874,5,111,0,0,874,875,5,110,0,0,875,876,5,99,0,0,876,877,
		5,101,0,0,877,228,1,0,0,0,878,879,5,101,0,0,879,880,5,110,0,0,880,881,
		5,100,0,0,881,882,5,111,0,0,882,883,5,110,0,0,883,884,5,99,0,0,884,885,
		5,101,0,0,885,230,1,0,0,0,886,887,5,108,0,0,887,888,5,111,0,0,888,889,
		5,99,0,0,889,890,5,97,0,0,890,891,5,108,0,0,891,892,1,0,0,0,892,893,7,
		11,0,0,893,232,1,0,0,0,894,895,5,62,0,0,895,896,5,62,0,0,896,897,1,0,0,
		0,897,898,6,110,10,0,898,234,1,0,0,0,899,900,5,123,0,0,900,901,1,0,0,0,
		901,902,6,111,30,0,902,903,6,111,31,0,903,904,6,111,17,0,904,236,1,0,0,
		0,905,906,9,0,0,0,906,907,1,0,0,0,907,908,6,112,32,0,908,909,6,112,31,
		0,909,238,1,0,0,0,910,911,3,17,2,0,911,240,1,0,0,0,912,913,5,62,0,0,913,
		914,5,62,0,0,914,915,1,0,0,0,915,916,6,114,10,0,916,242,1,0,0,0,917,918,
		5,123,0,0,918,919,1,0,0,0,919,920,6,115,17,0,920,244,1,0,0,0,921,923,8,
		12,0,0,922,921,1,0,0,0,923,924,1,0,0,0,924,922,1,0,0,0,924,925,1,0,0,0,
		925,246,1,0,0,0,926,927,3,17,2,0,927,248,1,0,0,0,928,929,3,21,4,0,929,
		930,1,0,0,0,930,931,6,118,33,0,931,932,6,118,10,0,932,250,1,0,0,0,933,
		934,5,62,0,0,934,935,5,62,0,0,935,936,1,0,0,0,936,937,6,119,26,0,937,938,
		6,119,10,0,938,252,1,0,0,0,939,940,3,21,4,0,940,941,1,0,0,0,941,942,6,
		120,33,0,942,943,6,120,10,0,943,254,1,0,0,0,944,945,3,59,23,0,945,946,
		1,0,0,0,946,947,6,121,21,0,947,948,6,121,9,0,948,256,1,0,0,0,949,950,5,
		62,0,0,950,951,5,62,0,0,951,952,1,0,0,0,952,953,6,122,26,0,953,954,6,122,
		10,0,954,258,1,0,0,0,51,0,1,2,3,4,5,6,7,8,9,10,11,12,262,272,278,282,287,
		301,304,308,313,322,326,335,339,353,429,463,466,516,568,575,582,590,595,
		600,607,614,620,626,632,697,699,727,732,743,777,842,871,924,34,0,1,0,0,
		3,0,0,2,0,5,1,0,5,3,0,5,2,0,5,7,0,1,11,0,7,10,0,2,8,0,4,0,0,7,6,0,7,5,
		0,5,9,0,7,11,0,5,6,0,5,4,0,5,8,0,7,23,0,5,5,0,2,6,0,7,19,0,7,18,0,7,81,
		0,7,68,0,7,61,0,7,84,0,1,89,1,5,12,0,5,11,0,7,87,0,2,10,0,7,88,0,7,8,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace Yarn.Compiler
